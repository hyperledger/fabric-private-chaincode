// Copyright IBM Corp. All Rights Reserved.
// Copyright 2020 Intel Corporation
//
// SPDX-License-Identifier: Apache-2.0

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v3.12.4
// source: irb.proto

package protos

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Approval_Decision int32

const (
	Approval_UNDEFINED Approval_Decision = 0
	Approval_APPROVED  Approval_Decision = 1
	Approval_REJECTED  Approval_Decision = 2
)

// Enum value maps for Approval_Decision.
var (
	Approval_Decision_name = map[int32]string{
		0: "UNDEFINED",
		1: "APPROVED",
		2: "REJECTED",
	}
	Approval_Decision_value = map[string]int32{
		"UNDEFINED": 0,
		"APPROVED":  1,
		"REJECTED":  2,
	}
)

func (x Approval_Decision) Enum() *Approval_Decision {
	p := new(Approval_Decision)
	*p = x
	return p
}

func (x Approval_Decision) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Approval_Decision) Descriptor() protoreflect.EnumDescriptor {
	return file_irb_proto_enumTypes[0].Descriptor()
}

func (Approval_Decision) Type() protoreflect.EnumType {
	return &file_irb_proto_enumTypes[0]
}

func (x Approval_Decision) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Approval_Decision.Descriptor instead.
func (Approval_Decision) EnumDescriptor() ([]byte, []int) {
	return file_irb_proto_rawDescGZIP(), []int{12, 0}
}

type Status_ReturnCode int32

const (
	Status_ERROR_UNKNOWN Status_ReturnCode = 0
	Status_OK            Status_ReturnCode = 1
)

// Enum value maps for Status_ReturnCode.
var (
	Status_ReturnCode_name = map[int32]string{
		0: "ERROR_UNKNOWN",
		1: "OK",
	}
	Status_ReturnCode_value = map[string]int32{
		"ERROR_UNKNOWN": 0,
		"OK":            1,
	}
)

func (x Status_ReturnCode) Enum() *Status_ReturnCode {
	p := new(Status_ReturnCode)
	*p = x
	return p
}

func (x Status_ReturnCode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Status_ReturnCode) Descriptor() protoreflect.EnumDescriptor {
	return file_irb_proto_enumTypes[1].Descriptor()
}

func (Status_ReturnCode) Type() protoreflect.EnumType {
	return &file_irb_proto_enumTypes[1]
}

func (x Status_ReturnCode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Status_ReturnCode.Descriptor instead.
func (Status_ReturnCode) EnumDescriptor() ([]byte, []int) {
	return file_irb_proto_rawDescGZIP(), []int{23, 0}
}

type StudyDetailsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	StudyId       string                 `protobuf:"bytes,1,opt,name=study_id,json=studyId,proto3" json:"study_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StudyDetailsRequest) Reset() {
	*x = StudyDetailsRequest{}
	mi := &file_irb_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StudyDetailsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StudyDetailsRequest) ProtoMessage() {}

func (x *StudyDetailsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_irb_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StudyDetailsRequest.ProtoReflect.Descriptor instead.
func (*StudyDetailsRequest) Descriptor() ([]byte, []int) {
	return file_irb_proto_rawDescGZIP(), []int{0}
}

func (x *StudyDetailsRequest) GetStudyId() string {
	if x != nil {
		return x.StudyId
	}
	return ""
}

type StudyDetailsMessage struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	StudyId        string                 `protobuf:"bytes,1,opt,name=study_id,json=studyId,proto3" json:"study_id,omitempty"`
	Metadata       string                 `protobuf:"bytes,2,opt,name=metadata,proto3" json:"metadata,omitempty"`
	UserIdentities []*Identity            `protobuf:"bytes,3,rep,name=user_identities,json=userIdentities,proto3" json:"user_identities,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *StudyDetailsMessage) Reset() {
	*x = StudyDetailsMessage{}
	mi := &file_irb_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StudyDetailsMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StudyDetailsMessage) ProtoMessage() {}

func (x *StudyDetailsMessage) ProtoReflect() protoreflect.Message {
	mi := &file_irb_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StudyDetailsMessage.ProtoReflect.Descriptor instead.
func (*StudyDetailsMessage) Descriptor() ([]byte, []int) {
	return file_irb_proto_rawDescGZIP(), []int{1}
}

func (x *StudyDetailsMessage) GetStudyId() string {
	if x != nil {
		return x.StudyId
	}
	return ""
}

func (x *StudyDetailsMessage) GetMetadata() string {
	if x != nil {
		return x.Metadata
	}
	return ""
}

func (x *StudyDetailsMessage) GetUserIdentities() []*Identity {
	if x != nil {
		return x.UserIdentities
	}
	return nil
}

type StudyDetailsResponse struct {
	state               protoimpl.MessageState `protogen:"open.v1"`
	StudyDetailsMessage []byte                 `protobuf:"bytes,1,opt,name=study_details_message,json=studyDetailsMessage,proto3" json:"study_details_message,omitempty"`
	// signed by Study Approval Service (SAS)
	// used to be verified by EAS when new study is created
	Signature     []byte  `protobuf:"bytes,2,opt,name=signature,proto3" json:"signature,omitempty"`
	Status        *Status `protobuf:"bytes,3,opt,name=status,proto3" json:"status,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StudyDetailsResponse) Reset() {
	*x = StudyDetailsResponse{}
	mi := &file_irb_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StudyDetailsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StudyDetailsResponse) ProtoMessage() {}

func (x *StudyDetailsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_irb_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StudyDetailsResponse.ProtoReflect.Descriptor instead.
func (*StudyDetailsResponse) Descriptor() ([]byte, []int) {
	return file_irb_proto_rawDescGZIP(), []int{2}
}

func (x *StudyDetailsResponse) GetStudyDetailsMessage() []byte {
	if x != nil {
		return x.StudyDetailsMessage
	}
	return nil
}

func (x *StudyDetailsResponse) GetSignature() []byte {
	if x != nil {
		return x.Signature
	}
	return nil
}

func (x *StudyDetailsResponse) GetStatus() *Status {
	if x != nil {
		return x.Status
	}
	return nil
}

type RegisterDataRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Participant   *Identity              `protobuf:"bytes,1,opt,name=participant,proto3" json:"participant,omitempty"`
	DecryptionKey []byte                 `protobuf:"bytes,2,opt,name=decryption_key,json=decryptionKey,proto3" json:"decryption_key,omitempty"`
	DataHandler   string                 `protobuf:"bytes,3,opt,name=data_handler,json=dataHandler,proto3" json:"data_handler,omitempty"`
	StudyId       string                 `protobuf:"bytes,4,opt,name=study_id,json=studyId,proto3" json:"study_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RegisterDataRequest) Reset() {
	*x = RegisterDataRequest{}
	mi := &file_irb_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RegisterDataRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegisterDataRequest) ProtoMessage() {}

func (x *RegisterDataRequest) ProtoReflect() protoreflect.Message {
	mi := &file_irb_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegisterDataRequest.ProtoReflect.Descriptor instead.
func (*RegisterDataRequest) Descriptor() ([]byte, []int) {
	return file_irb_proto_rawDescGZIP(), []int{3}
}

func (x *RegisterDataRequest) GetParticipant() *Identity {
	if x != nil {
		return x.Participant
	}
	return nil
}

func (x *RegisterDataRequest) GetDecryptionKey() []byte {
	if x != nil {
		return x.DecryptionKey
	}
	return nil
}

func (x *RegisterDataRequest) GetDataHandler() string {
	if x != nil {
		return x.DataHandler
	}
	return ""
}

func (x *RegisterDataRequest) GetStudyId() string {
	if x != nil {
		return x.StudyId
	}
	return ""
}

type SubmitStudyRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Details       *StudyDetailsResponse  `protobuf:"bytes,1,opt,name=details,proto3" json:"details,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SubmitStudyRequest) Reset() {
	*x = SubmitStudyRequest{}
	mi := &file_irb_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SubmitStudyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubmitStudyRequest) ProtoMessage() {}

func (x *SubmitStudyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_irb_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubmitStudyRequest.ProtoReflect.Descriptor instead.
func (*SubmitStudyRequest) Descriptor() ([]byte, []int) {
	return file_irb_proto_rawDescGZIP(), []int{4}
}

func (x *SubmitStudyRequest) GetDetails() *StudyDetailsResponse {
	if x != nil {
		return x.Details
	}
	return nil
}

type NewExperimentRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Experiment    *Experiment            `protobuf:"bytes,1,opt,name=experiment,proto3" json:"experiment,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *NewExperimentRequest) Reset() {
	*x = NewExperimentRequest{}
	mi := &file_irb_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NewExperimentRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NewExperimentRequest) ProtoMessage() {}

func (x *NewExperimentRequest) ProtoReflect() protoreflect.Message {
	mi := &file_irb_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NewExperimentRequest.ProtoReflect.Descriptor instead.
func (*NewExperimentRequest) Descriptor() ([]byte, []int) {
	return file_irb_proto_rawDescGZIP(), []int{5}
}

func (x *NewExperimentRequest) GetExperiment() *Experiment {
	if x != nil {
		return x.Experiment
	}
	return nil
}

type GetExperimentRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ExperimentId  string                 `protobuf:"bytes,1,opt,name=experiment_id,json=experimentId,proto3" json:"experiment_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetExperimentRequest) Reset() {
	*x = GetExperimentRequest{}
	mi := &file_irb_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetExperimentRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetExperimentRequest) ProtoMessage() {}

func (x *GetExperimentRequest) ProtoReflect() protoreflect.Message {
	mi := &file_irb_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetExperimentRequest.ProtoReflect.Descriptor instead.
func (*GetExperimentRequest) Descriptor() ([]byte, []int) {
	return file_irb_proto_rawDescGZIP(), []int{6}
}

func (x *GetExperimentRequest) GetExperimentId() string {
	if x != nil {
		return x.ExperimentId
	}
	return ""
}

type GetExperimentResponse struct {
	state              protoimpl.MessageState `protogen:"open.v1"`
	ExperimentProposal *ExperimentProposal    `protobuf:"bytes,1,opt,name=experiment_proposal,json=experimentProposal,proto3" json:"experiment_proposal,omitempty"`
	Status             *Status                `protobuf:"bytes,2,opt,name=status,proto3" json:"status,omitempty"`
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

func (x *GetExperimentResponse) Reset() {
	*x = GetExperimentResponse{}
	mi := &file_irb_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetExperimentResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetExperimentResponse) ProtoMessage() {}

func (x *GetExperimentResponse) ProtoReflect() protoreflect.Message {
	mi := &file_irb_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetExperimentResponse.ProtoReflect.Descriptor instead.
func (*GetExperimentResponse) Descriptor() ([]byte, []int) {
	return file_irb_proto_rawDescGZIP(), []int{7}
}

func (x *GetExperimentResponse) GetExperimentProposal() *ExperimentProposal {
	if x != nil {
		return x.ExperimentProposal
	}
	return nil
}

func (x *GetExperimentResponse) GetStatus() *Status {
	if x != nil {
		return x.Status
	}
	return nil
}

type WorkerCredentials struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	IdentityBytes []byte                 `protobuf:"bytes,1,opt,name=identity_bytes,json=identityBytes,proto3" json:"identity_bytes,omitempty"`
	Attestation   []byte                 `protobuf:"bytes,2,opt,name=attestation,proto3" json:"attestation,omitempty"`
	Evidence      []byte                 `protobuf:"bytes,3,opt,name=evidence,proto3" json:"evidence,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *WorkerCredentials) Reset() {
	*x = WorkerCredentials{}
	mi := &file_irb_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *WorkerCredentials) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WorkerCredentials) ProtoMessage() {}

func (x *WorkerCredentials) ProtoReflect() protoreflect.Message {
	mi := &file_irb_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WorkerCredentials.ProtoReflect.Descriptor instead.
func (*WorkerCredentials) Descriptor() ([]byte, []int) {
	return file_irb_proto_rawDescGZIP(), []int{8}
}

func (x *WorkerCredentials) GetIdentityBytes() []byte {
	if x != nil {
		return x.IdentityBytes
	}
	return nil
}

func (x *WorkerCredentials) GetAttestation() []byte {
	if x != nil {
		return x.Attestation
	}
	return nil
}

func (x *WorkerCredentials) GetEvidence() []byte {
	if x != nil {
		return x.Evidence
	}
	return nil
}

type ExperimentProposal struct {
	state             protoimpl.MessageState `protogen:"open.v1"`
	StudyId           string                 `protobuf:"bytes,1,opt,name=study_id,json=studyId,proto3" json:"study_id,omitempty"`
	ExperimentId      string                 `protobuf:"bytes,2,opt,name=experiment_id,json=experimentId,proto3" json:"experiment_id,omitempty"`
	Mrenclave         string                 `protobuf:"bytes,3,opt,name=mrenclave,proto3" json:"mrenclave,omitempty"`
	Metadata          string                 `protobuf:"bytes,4,opt,name=metadata,proto3" json:"metadata,omitempty"`
	WorkerCredentials *WorkerCredentials     `protobuf:"bytes,5,opt,name=worker_credentials,json=workerCredentials,proto3" json:"worker_credentials,omitempty"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *ExperimentProposal) Reset() {
	*x = ExperimentProposal{}
	mi := &file_irb_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ExperimentProposal) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExperimentProposal) ProtoMessage() {}

func (x *ExperimentProposal) ProtoReflect() protoreflect.Message {
	mi := &file_irb_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExperimentProposal.ProtoReflect.Descriptor instead.
func (*ExperimentProposal) Descriptor() ([]byte, []int) {
	return file_irb_proto_rawDescGZIP(), []int{9}
}

func (x *ExperimentProposal) GetStudyId() string {
	if x != nil {
		return x.StudyId
	}
	return ""
}

func (x *ExperimentProposal) GetExperimentId() string {
	if x != nil {
		return x.ExperimentId
	}
	return ""
}

func (x *ExperimentProposal) GetMrenclave() string {
	if x != nil {
		return x.Mrenclave
	}
	return ""
}

func (x *ExperimentProposal) GetMetadata() string {
	if x != nil {
		return x.Metadata
	}
	return ""
}

func (x *ExperimentProposal) GetWorkerCredentials() *WorkerCredentials {
	if x != nil {
		return x.WorkerCredentials
	}
	return nil
}

type Experiment struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// we keep bytes
	ExperimentProposal []byte    `protobuf:"bytes,1,opt,name=experiment_proposal,json=experimentProposal,proto3" json:"experiment_proposal,omitempty"`
	Approval           *Approval `protobuf:"bytes,2,opt,name=approval,proto3" json:"approval,omitempty"`
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

func (x *Experiment) Reset() {
	*x = Experiment{}
	mi := &file_irb_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Experiment) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Experiment) ProtoMessage() {}

func (x *Experiment) ProtoReflect() protoreflect.Message {
	mi := &file_irb_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Experiment.ProtoReflect.Descriptor instead.
func (*Experiment) Descriptor() ([]byte, []int) {
	return file_irb_proto_rawDescGZIP(), []int{10}
}

func (x *Experiment) GetExperimentProposal() []byte {
	if x != nil {
		return x.ExperimentProposal
	}
	return nil
}

func (x *Experiment) GetApproval() *Approval {
	if x != nil {
		return x.Approval
	}
	return nil
}

type ApprovalRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Approval      *Approval              `protobuf:"bytes,1,opt,name=approval,proto3" json:"approval,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ApprovalRequest) Reset() {
	*x = ApprovalRequest{}
	mi := &file_irb_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ApprovalRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApprovalRequest) ProtoMessage() {}

func (x *ApprovalRequest) ProtoReflect() protoreflect.Message {
	mi := &file_irb_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ApprovalRequest.ProtoReflect.Descriptor instead.
func (*ApprovalRequest) Descriptor() ([]byte, []int) {
	return file_irb_proto_rawDescGZIP(), []int{11}
}

func (x *ApprovalRequest) GetApproval() *Approval {
	if x != nil {
		return x.Approval
	}
	return nil
}

type Approval struct {
	state        protoimpl.MessageState `protogen:"open.v1"`
	ExperimentId string                 `protobuf:"bytes,1,opt,name=experiment_id,json=experimentId,proto3" json:"experiment_id,omitempty"`
	// serialized Experiment Proposal
	ExperimentProposal []byte            `protobuf:"bytes,2,opt,name=experiment_proposal,json=experimentProposal,proto3" json:"experiment_proposal,omitempty"`
	Decision           Approval_Decision `protobuf:"varint,3,opt,name=decision,proto3,enum=Approval_Decision" json:"decision,omitempty"`
	Approver           *Identity         `protobuf:"bytes,4,opt,name=approver,proto3" json:"approver,omitempty"`
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

func (x *Approval) Reset() {
	*x = Approval{}
	mi := &file_irb_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Approval) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Approval) ProtoMessage() {}

func (x *Approval) ProtoReflect() protoreflect.Message {
	mi := &file_irb_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Approval.ProtoReflect.Descriptor instead.
func (*Approval) Descriptor() ([]byte, []int) {
	return file_irb_proto_rawDescGZIP(), []int{12}
}

func (x *Approval) GetExperimentId() string {
	if x != nil {
		return x.ExperimentId
	}
	return ""
}

func (x *Approval) GetExperimentProposal() []byte {
	if x != nil {
		return x.ExperimentProposal
	}
	return nil
}

func (x *Approval) GetDecision() Approval_Decision {
	if x != nil {
		return x.Decision
	}
	return Approval_UNDEFINED
}

func (x *Approval) GetApprover() *Identity {
	if x != nil {
		return x.Approver
	}
	return nil
}

type SignedApprovalMessage struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Approval      []byte                 `protobuf:"bytes,1,opt,name=approval,proto3" json:"approval,omitempty"`
	Signature     []byte                 `protobuf:"bytes,2,opt,name=signature,proto3" json:"signature,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SignedApprovalMessage) Reset() {
	*x = SignedApprovalMessage{}
	mi := &file_irb_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SignedApprovalMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SignedApprovalMessage) ProtoMessage() {}

func (x *SignedApprovalMessage) ProtoReflect() protoreflect.Message {
	mi := &file_irb_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SignedApprovalMessage.ProtoReflect.Descriptor instead.
func (*SignedApprovalMessage) Descriptor() ([]byte, []int) {
	return file_irb_proto_rawDescGZIP(), []int{13}
}

func (x *SignedApprovalMessage) GetApproval() []byte {
	if x != nil {
		return x.Approval
	}
	return nil
}

func (x *SignedApprovalMessage) GetSignature() []byte {
	if x != nil {
		return x.Signature
	}
	return nil
}

type EvaluationPackRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	StudyId       string                 `protobuf:"bytes,1,opt,name=study_id,json=studyId,proto3" json:"study_id,omitempty"`
	ExperimentId  string                 `protobuf:"bytes,2,opt,name=experiment_id,json=experimentId,proto3" json:"experiment_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *EvaluationPackRequest) Reset() {
	*x = EvaluationPackRequest{}
	mi := &file_irb_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EvaluationPackRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EvaluationPackRequest) ProtoMessage() {}

func (x *EvaluationPackRequest) ProtoReflect() protoreflect.Message {
	mi := &file_irb_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EvaluationPackRequest.ProtoReflect.Descriptor instead.
func (*EvaluationPackRequest) Descriptor() ([]byte, []int) {
	return file_irb_proto_rawDescGZIP(), []int{14}
}

func (x *EvaluationPackRequest) GetStudyId() string {
	if x != nil {
		return x.StudyId
	}
	return ""
}

func (x *EvaluationPackRequest) GetExperimentId() string {
	if x != nil {
		return x.ExperimentId
	}
	return ""
}

type EncryptedEvaluationPack struct {
	state                  protoimpl.MessageState `protogen:"open.v1"`
	EncryptedEncryptionKey []byte                 `protobuf:"bytes,1,opt,name=encrypted_encryption_key,json=encryptedEncryptionKey,proto3" json:"encrypted_encryption_key,omitempty"`
	// this is ciphertext of a serialized EvaluationPack msg
	EncryptedEvaluationpack []byte `protobuf:"bytes,2,opt,name=encrypted_evaluationpack,json=encryptedEvaluationpack,proto3" json:"encrypted_evaluationpack,omitempty"`
	unknownFields           protoimpl.UnknownFields
	sizeCache               protoimpl.SizeCache
}

func (x *EncryptedEvaluationPack) Reset() {
	*x = EncryptedEvaluationPack{}
	mi := &file_irb_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EncryptedEvaluationPack) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EncryptedEvaluationPack) ProtoMessage() {}

func (x *EncryptedEvaluationPack) ProtoReflect() protoreflect.Message {
	mi := &file_irb_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EncryptedEvaluationPack.ProtoReflect.Descriptor instead.
func (*EncryptedEvaluationPack) Descriptor() ([]byte, []int) {
	return file_irb_proto_rawDescGZIP(), []int{15}
}

func (x *EncryptedEvaluationPack) GetEncryptedEncryptionKey() []byte {
	if x != nil {
		return x.EncryptedEncryptionKey
	}
	return nil
}

func (x *EncryptedEvaluationPack) GetEncryptedEvaluationpack() []byte {
	if x != nil {
		return x.EncryptedEvaluationpack
	}
	return nil
}

type EvaluationPackMessage struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	Item           []*EvaluationPackItem  `protobuf:"bytes,1,rep,name=item,proto3" json:"item,omitempty"`
	RegisteredData []*RegisterDataRequest `protobuf:"bytes,2,rep,name=registered_data,json=registeredData,proto3" json:"registered_data,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *EvaluationPackMessage) Reset() {
	*x = EvaluationPackMessage{}
	mi := &file_irb_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EvaluationPackMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EvaluationPackMessage) ProtoMessage() {}

func (x *EvaluationPackMessage) ProtoReflect() protoreflect.Message {
	mi := &file_irb_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EvaluationPackMessage.ProtoReflect.Descriptor instead.
func (*EvaluationPackMessage) Descriptor() ([]byte, []int) {
	return file_irb_proto_rawDescGZIP(), []int{16}
}

func (x *EvaluationPackMessage) GetItem() []*EvaluationPackItem {
	if x != nil {
		return x.Item
	}
	return nil
}

func (x *EvaluationPackMessage) GetRegisteredData() []*RegisterDataRequest {
	if x != nil {
		return x.RegisteredData
	}
	return nil
}

type EvaluationPackItem struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	DecryptionKey []byte                 `protobuf:"bytes,1,opt,name=decryption_key,json=decryptionKey,proto3" json:"decryption_key,omitempty"`
	DataHandler   string                 `protobuf:"bytes,2,opt,name=data_handler,json=dataHandler,proto3" json:"data_handler,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *EvaluationPackItem) Reset() {
	*x = EvaluationPackItem{}
	mi := &file_irb_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EvaluationPackItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EvaluationPackItem) ProtoMessage() {}

func (x *EvaluationPackItem) ProtoReflect() protoreflect.Message {
	mi := &file_irb_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EvaluationPackItem.ProtoReflect.Descriptor instead.
func (*EvaluationPackItem) Descriptor() ([]byte, []int) {
	return file_irb_proto_rawDescGZIP(), []int{17}
}

func (x *EvaluationPackItem) GetDecryptionKey() []byte {
	if x != nil {
		return x.DecryptionKey
	}
	return nil
}

func (x *EvaluationPackItem) GetDataHandler() string {
	if x != nil {
		return x.DataHandler
	}
	return ""
}

// note that the State message is just here to represent the KVS accessable via putState and getState functions within FPC
type State struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// as key we use study id
	State map[string]*Study `protobuf:"bytes,1,rep,name=state,proto3" json:"state,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	// as key we use an identity.uuid
	RegisteredData map[string]*Data `protobuf:"bytes,2,rep,name=registered_data,json=registeredData,proto3" json:"registered_data,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *State) Reset() {
	*x = State{}
	mi := &file_irb_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *State) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*State) ProtoMessage() {}

func (x *State) ProtoReflect() protoreflect.Message {
	mi := &file_irb_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use State.ProtoReflect.Descriptor instead.
func (*State) Descriptor() ([]byte, []int) {
	return file_irb_proto_rawDescGZIP(), []int{18}
}

func (x *State) GetState() map[string]*Study {
	if x != nil {
		return x.State
	}
	return nil
}

func (x *State) GetRegisteredData() map[string]*Data {
	if x != nil {
		return x.RegisteredData
	}
	return nil
}

type Study struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	StudyId       string                 `protobuf:"bytes,1,opt,name=study_id,json=studyId,proto3" json:"study_id,omitempty"`
	Participant   []*Identity            `protobuf:"bytes,2,rep,name=participant,proto3" json:"participant,omitempty"`
	Experiment    []*Experiment          `protobuf:"bytes,3,rep,name=experiment,proto3" json:"experiment,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Study) Reset() {
	*x = Study{}
	mi := &file_irb_proto_msgTypes[19]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Study) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Study) ProtoMessage() {}

func (x *Study) ProtoReflect() protoreflect.Message {
	mi := &file_irb_proto_msgTypes[19]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Study.ProtoReflect.Descriptor instead.
func (*Study) Descriptor() ([]byte, []int) {
	return file_irb_proto_rawDescGZIP(), []int{19}
}

func (x *Study) GetStudyId() string {
	if x != nil {
		return x.StudyId
	}
	return ""
}

func (x *Study) GetParticipant() []*Identity {
	if x != nil {
		return x.Participant
	}
	return nil
}

func (x *Study) GetExperiment() []*Experiment {
	if x != nil {
		return x.Experiment
	}
	return nil
}

type Data struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Participant   *Identity              `protobuf:"bytes,1,opt,name=participant,proto3" json:"participant,omitempty"`
	DecryptionKey []byte                 `protobuf:"bytes,2,opt,name=decryption_key,json=decryptionKey,proto3" json:"decryption_key,omitempty"`
	DataHandler   string                 `protobuf:"bytes,3,opt,name=data_handler,json=dataHandler,proto3" json:"data_handler,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Data) Reset() {
	*x = Data{}
	mi := &file_irb_proto_msgTypes[20]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Data) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Data) ProtoMessage() {}

func (x *Data) ProtoReflect() protoreflect.Message {
	mi := &file_irb_proto_msgTypes[20]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Data.ProtoReflect.Descriptor instead.
func (*Data) Descriptor() ([]byte, []int) {
	return file_irb_proto_rawDescGZIP(), []int{20}
}

func (x *Data) GetParticipant() *Identity {
	if x != nil {
		return x.Participant
	}
	return nil
}

func (x *Data) GetDecryptionKey() []byte {
	if x != nil {
		return x.DecryptionKey
	}
	return nil
}

func (x *Data) GetDataHandler() string {
	if x != nil {
		return x.DataHandler
	}
	return ""
}

type ExecuteRequest struct {
	state                   protoimpl.MessageState `protogen:"open.v1"`
	ExperimentId            string                 `protobuf:"bytes,1,opt,name=experiment_id,json=experimentId,proto3" json:"experiment_id,omitempty"`
	EncryptedEvaluationPack []byte                 `protobuf:"bytes,2,opt,name=encrypted_evaluationPack,json=encryptedEvaluationPack,proto3" json:"encrypted_evaluationPack,omitempty"`
	unknownFields           protoimpl.UnknownFields
	sizeCache               protoimpl.SizeCache
}

func (x *ExecuteRequest) Reset() {
	*x = ExecuteRequest{}
	mi := &file_irb_proto_msgTypes[21]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ExecuteRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExecuteRequest) ProtoMessage() {}

func (x *ExecuteRequest) ProtoReflect() protoreflect.Message {
	mi := &file_irb_proto_msgTypes[21]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExecuteRequest.ProtoReflect.Descriptor instead.
func (*ExecuteRequest) Descriptor() ([]byte, []int) {
	return file_irb_proto_rawDescGZIP(), []int{21}
}

func (x *ExecuteRequest) GetExperimentId() string {
	if x != nil {
		return x.ExperimentId
	}
	return ""
}

func (x *ExecuteRequest) GetEncryptedEvaluationPack() []byte {
	if x != nil {
		return x.EncryptedEvaluationPack
	}
	return nil
}

// Common messages
type Identity struct {
	state               protoimpl.MessageState `protogen:"open.v1"`
	Uuid                string                 `protobuf:"bytes,1,opt,name=uuid,proto3" json:"uuid,omitempty"`
	PublicKey           []byte                 `protobuf:"bytes,2,opt,name=public_key,json=publicKey,proto3" json:"public_key,omitempty"`
	PublicEncryptionKey []byte                 `protobuf:"bytes,3,opt,name=public_encryption_key,json=publicEncryptionKey,proto3" json:"public_encryption_key,omitempty"`
	unknownFields       protoimpl.UnknownFields
	sizeCache           protoimpl.SizeCache
}

func (x *Identity) Reset() {
	*x = Identity{}
	mi := &file_irb_proto_msgTypes[22]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Identity) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Identity) ProtoMessage() {}

func (x *Identity) ProtoReflect() protoreflect.Message {
	mi := &file_irb_proto_msgTypes[22]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Identity.ProtoReflect.Descriptor instead.
func (*Identity) Descriptor() ([]byte, []int) {
	return file_irb_proto_rawDescGZIP(), []int{22}
}

func (x *Identity) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

func (x *Identity) GetPublicKey() []byte {
	if x != nil {
		return x.PublicKey
	}
	return nil
}

func (x *Identity) GetPublicEncryptionKey() []byte {
	if x != nil {
		return x.PublicEncryptionKey
	}
	return nil
}

type Status struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Msg           string                 `protobuf:"bytes,1,opt,name=msg,proto3" json:"msg,omitempty"`
	ReturnCode    Status_ReturnCode      `protobuf:"varint,2,opt,name=return_code,json=returnCode,proto3,enum=Status_ReturnCode" json:"return_code,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Status) Reset() {
	*x = Status{}
	mi := &file_irb_proto_msgTypes[23]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Status) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Status) ProtoMessage() {}

func (x *Status) ProtoReflect() protoreflect.Message {
	mi := &file_irb_proto_msgTypes[23]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Status.ProtoReflect.Descriptor instead.
func (*Status) Descriptor() ([]byte, []int) {
	return file_irb_proto_rawDescGZIP(), []int{23}
}

func (x *Status) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *Status) GetReturnCode() Status_ReturnCode {
	if x != nil {
		return x.ReturnCode
	}
	return Status_ERROR_UNKNOWN
}

var File_irb_proto protoreflect.FileDescriptor

const file_irb_proto_rawDesc = "" +
	"\n" +
	"\tirb.proto\"0\n" +
	"\x13StudyDetailsRequest\x12\x19\n" +
	"\bstudy_id\x18\x01 \x01(\tR\astudyId\"\x80\x01\n" +
	"\x13StudyDetailsMessage\x12\x19\n" +
	"\bstudy_id\x18\x01 \x01(\tR\astudyId\x12\x1a\n" +
	"\bmetadata\x18\x02 \x01(\tR\bmetadata\x122\n" +
	"\x0fuser_identities\x18\x03 \x03(\v2\t.IdentityR\x0euserIdentities\"\x89\x01\n" +
	"\x14StudyDetailsResponse\x122\n" +
	"\x15study_details_message\x18\x01 \x01(\fR\x13studyDetailsMessage\x12\x1c\n" +
	"\tsignature\x18\x02 \x01(\fR\tsignature\x12\x1f\n" +
	"\x06status\x18\x03 \x01(\v2\a.StatusR\x06status\"\xa7\x01\n" +
	"\x13RegisterDataRequest\x12+\n" +
	"\vparticipant\x18\x01 \x01(\v2\t.IdentityR\vparticipant\x12%\n" +
	"\x0edecryption_key\x18\x02 \x01(\fR\rdecryptionKey\x12!\n" +
	"\fdata_handler\x18\x03 \x01(\tR\vdataHandler\x12\x19\n" +
	"\bstudy_id\x18\x04 \x01(\tR\astudyId\"E\n" +
	"\x12SubmitStudyRequest\x12/\n" +
	"\adetails\x18\x01 \x01(\v2\x15.StudyDetailsResponseR\adetails\"C\n" +
	"\x14NewExperimentRequest\x12+\n" +
	"\n" +
	"experiment\x18\x01 \x01(\v2\v.ExperimentR\n" +
	"experiment\";\n" +
	"\x14GetExperimentRequest\x12#\n" +
	"\rexperiment_id\x18\x01 \x01(\tR\fexperimentId\"~\n" +
	"\x15GetExperimentResponse\x12D\n" +
	"\x13experiment_proposal\x18\x01 \x01(\v2\x13.ExperimentProposalR\x12experimentProposal\x12\x1f\n" +
	"\x06status\x18\x02 \x01(\v2\a.StatusR\x06status\"x\n" +
	"\x11WorkerCredentials\x12%\n" +
	"\x0eidentity_bytes\x18\x01 \x01(\fR\ridentityBytes\x12 \n" +
	"\vattestation\x18\x02 \x01(\fR\vattestation\x12\x1a\n" +
	"\bevidence\x18\x03 \x01(\fR\bevidence\"\xd1\x01\n" +
	"\x12ExperimentProposal\x12\x19\n" +
	"\bstudy_id\x18\x01 \x01(\tR\astudyId\x12#\n" +
	"\rexperiment_id\x18\x02 \x01(\tR\fexperimentId\x12\x1c\n" +
	"\tmrenclave\x18\x03 \x01(\tR\tmrenclave\x12\x1a\n" +
	"\bmetadata\x18\x04 \x01(\tR\bmetadata\x12A\n" +
	"\x12worker_credentials\x18\x05 \x01(\v2\x12.WorkerCredentialsR\x11workerCredentials\"d\n" +
	"\n" +
	"Experiment\x12/\n" +
	"\x13experiment_proposal\x18\x01 \x01(\fR\x12experimentProposal\x12%\n" +
	"\bapproval\x18\x02 \x01(\v2\t.ApprovalR\bapproval\"8\n" +
	"\x0fApprovalRequest\x12%\n" +
	"\bapproval\x18\x01 \x01(\v2\t.ApprovalR\bapproval\"\xee\x01\n" +
	"\bApproval\x12#\n" +
	"\rexperiment_id\x18\x01 \x01(\tR\fexperimentId\x12/\n" +
	"\x13experiment_proposal\x18\x02 \x01(\fR\x12experimentProposal\x12.\n" +
	"\bdecision\x18\x03 \x01(\x0e2\x12.Approval.DecisionR\bdecision\x12%\n" +
	"\bapprover\x18\x04 \x01(\v2\t.IdentityR\bapprover\"5\n" +
	"\bDecision\x12\r\n" +
	"\tUNDEFINED\x10\x00\x12\f\n" +
	"\bAPPROVED\x10\x01\x12\f\n" +
	"\bREJECTED\x10\x02\"Q\n" +
	"\x15SignedApprovalMessage\x12\x1a\n" +
	"\bapproval\x18\x01 \x01(\fR\bapproval\x12\x1c\n" +
	"\tsignature\x18\x02 \x01(\fR\tsignature\"W\n" +
	"\x15EvaluationPackRequest\x12\x19\n" +
	"\bstudy_id\x18\x01 \x01(\tR\astudyId\x12#\n" +
	"\rexperiment_id\x18\x02 \x01(\tR\fexperimentId\"\x8e\x01\n" +
	"\x17EncryptedEvaluationPack\x128\n" +
	"\x18encrypted_encryption_key\x18\x01 \x01(\fR\x16encryptedEncryptionKey\x129\n" +
	"\x18encrypted_evaluationpack\x18\x02 \x01(\fR\x17encryptedEvaluationpack\"\x7f\n" +
	"\x15EvaluationPackMessage\x12'\n" +
	"\x04item\x18\x01 \x03(\v2\x13.EvaluationPackItemR\x04item\x12=\n" +
	"\x0fregistered_data\x18\x02 \x03(\v2\x14.RegisterDataRequestR\x0eregisteredData\"^\n" +
	"\x12EvaluationPackItem\x12%\n" +
	"\x0edecryption_key\x18\x01 \x01(\fR\rdecryptionKey\x12!\n" +
	"\fdata_handler\x18\x02 \x01(\tR\vdataHandler\"\x81\x02\n" +
	"\x05State\x12'\n" +
	"\x05state\x18\x01 \x03(\v2\x11.State.StateEntryR\x05state\x12C\n" +
	"\x0fregistered_data\x18\x02 \x03(\v2\x1a.State.RegisteredDataEntryR\x0eregisteredData\x1a@\n" +
	"\n" +
	"StateEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x1c\n" +
	"\x05value\x18\x02 \x01(\v2\x06.StudyR\x05value:\x028\x01\x1aH\n" +
	"\x13RegisteredDataEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x1b\n" +
	"\x05value\x18\x02 \x01(\v2\x05.DataR\x05value:\x028\x01\"|\n" +
	"\x05Study\x12\x19\n" +
	"\bstudy_id\x18\x01 \x01(\tR\astudyId\x12+\n" +
	"\vparticipant\x18\x02 \x03(\v2\t.IdentityR\vparticipant\x12+\n" +
	"\n" +
	"experiment\x18\x03 \x03(\v2\v.ExperimentR\n" +
	"experiment\"}\n" +
	"\x04Data\x12+\n" +
	"\vparticipant\x18\x01 \x01(\v2\t.IdentityR\vparticipant\x12%\n" +
	"\x0edecryption_key\x18\x02 \x01(\fR\rdecryptionKey\x12!\n" +
	"\fdata_handler\x18\x03 \x01(\tR\vdataHandler\"p\n" +
	"\x0eExecuteRequest\x12#\n" +
	"\rexperiment_id\x18\x01 \x01(\tR\fexperimentId\x129\n" +
	"\x18encrypted_evaluationPack\x18\x02 \x01(\fR\x17encryptedEvaluationPack\"q\n" +
	"\bIdentity\x12\x12\n" +
	"\x04uuid\x18\x01 \x01(\tR\x04uuid\x12\x1d\n" +
	"\n" +
	"public_key\x18\x02 \x01(\fR\tpublicKey\x122\n" +
	"\x15public_encryption_key\x18\x03 \x01(\fR\x13publicEncryptionKey\"x\n" +
	"\x06Status\x12\x10\n" +
	"\x03msg\x18\x01 \x01(\tR\x03msg\x123\n" +
	"\vreturn_code\x18\x02 \x01(\x0e2\x12.Status.ReturnCodeR\n" +
	"returnCode\"'\n" +
	"\n" +
	"ReturnCode\x12\x11\n" +
	"\rERROR_UNKNOWN\x10\x00\x12\x06\n" +
	"\x02OK\x10\x012X\n" +
	"\x14StudyApprovalService\x12@\n" +
	"\x0fGetStudyDetails\x12\x14.StudyDetailsRequest\x1a\x15.StudyDetailsResponse\"\x002\xf9\x02\n" +
	"\x19ExperimentApprovalService\x12/\n" +
	"\fRegisterData\x12\x14.RegisterDataRequest\x1a\a.Status\"\x00\x12/\n" +
	"\rRegisterStudy\x12\x13.SubmitStudyRequest\x1a\a.Status\"\x00\x121\n" +
	"\rNewExperiment\x12\x15.NewExperimentRequest\x1a\a.Status\"\x00\x12H\n" +
	"\x15GetExperimentProposal\x12\x15.GetExperimentRequest\x1a\x16.GetExperimentResponse\"\x00\x120\n" +
	"\x11ApproveExperiment\x12\x10.ApprovalRequest\x1a\a.Status\"\x00\x12K\n" +
	"\x15RequestEvaluationPack\x12\x16.EvaluationPackRequest\x1a\x18.EncryptedEvaluationPack\"\x002/\n" +
	"\x06Worker\x12%\n" +
	"\aExecute\x12\x0f.ExecuteRequest\x1a\a.Status\"\x00BNZLgithub.com/hyperledger/fabric-private-chaincode/samples/demos/irb/pkg/protosb\x06proto3"

var (
	file_irb_proto_rawDescOnce sync.Once
	file_irb_proto_rawDescData []byte
)

func file_irb_proto_rawDescGZIP() []byte {
	file_irb_proto_rawDescOnce.Do(func() {
		file_irb_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_irb_proto_rawDesc), len(file_irb_proto_rawDesc)))
	})
	return file_irb_proto_rawDescData
}

var file_irb_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_irb_proto_msgTypes = make([]protoimpl.MessageInfo, 26)
var file_irb_proto_goTypes = []any{
	(Approval_Decision)(0),          // 0: Approval.Decision
	(Status_ReturnCode)(0),          // 1: Status.ReturnCode
	(*StudyDetailsRequest)(nil),     // 2: StudyDetailsRequest
	(*StudyDetailsMessage)(nil),     // 3: StudyDetailsMessage
	(*StudyDetailsResponse)(nil),    // 4: StudyDetailsResponse
	(*RegisterDataRequest)(nil),     // 5: RegisterDataRequest
	(*SubmitStudyRequest)(nil),      // 6: SubmitStudyRequest
	(*NewExperimentRequest)(nil),    // 7: NewExperimentRequest
	(*GetExperimentRequest)(nil),    // 8: GetExperimentRequest
	(*GetExperimentResponse)(nil),   // 9: GetExperimentResponse
	(*WorkerCredentials)(nil),       // 10: WorkerCredentials
	(*ExperimentProposal)(nil),      // 11: ExperimentProposal
	(*Experiment)(nil),              // 12: Experiment
	(*ApprovalRequest)(nil),         // 13: ApprovalRequest
	(*Approval)(nil),                // 14: Approval
	(*SignedApprovalMessage)(nil),   // 15: SignedApprovalMessage
	(*EvaluationPackRequest)(nil),   // 16: EvaluationPackRequest
	(*EncryptedEvaluationPack)(nil), // 17: EncryptedEvaluationPack
	(*EvaluationPackMessage)(nil),   // 18: EvaluationPackMessage
	(*EvaluationPackItem)(nil),      // 19: EvaluationPackItem
	(*State)(nil),                   // 20: State
	(*Study)(nil),                   // 21: Study
	(*Data)(nil),                    // 22: Data
	(*ExecuteRequest)(nil),          // 23: ExecuteRequest
	(*Identity)(nil),                // 24: Identity
	(*Status)(nil),                  // 25: Status
	nil,                             // 26: State.StateEntry
	nil,                             // 27: State.RegisteredDataEntry
}
var file_irb_proto_depIdxs = []int32{
	24, // 0: StudyDetailsMessage.user_identities:type_name -> Identity
	25, // 1: StudyDetailsResponse.status:type_name -> Status
	24, // 2: RegisterDataRequest.participant:type_name -> Identity
	4,  // 3: SubmitStudyRequest.details:type_name -> StudyDetailsResponse
	12, // 4: NewExperimentRequest.experiment:type_name -> Experiment
	11, // 5: GetExperimentResponse.experiment_proposal:type_name -> ExperimentProposal
	25, // 6: GetExperimentResponse.status:type_name -> Status
	10, // 7: ExperimentProposal.worker_credentials:type_name -> WorkerCredentials
	14, // 8: Experiment.approval:type_name -> Approval
	14, // 9: ApprovalRequest.approval:type_name -> Approval
	0,  // 10: Approval.decision:type_name -> Approval.Decision
	24, // 11: Approval.approver:type_name -> Identity
	19, // 12: EvaluationPackMessage.item:type_name -> EvaluationPackItem
	5,  // 13: EvaluationPackMessage.registered_data:type_name -> RegisterDataRequest
	26, // 14: State.state:type_name -> State.StateEntry
	27, // 15: State.registered_data:type_name -> State.RegisteredDataEntry
	24, // 16: Study.participant:type_name -> Identity
	12, // 17: Study.experiment:type_name -> Experiment
	24, // 18: Data.participant:type_name -> Identity
	1,  // 19: Status.return_code:type_name -> Status.ReturnCode
	21, // 20: State.StateEntry.value:type_name -> Study
	22, // 21: State.RegisteredDataEntry.value:type_name -> Data
	2,  // 22: StudyApprovalService.GetStudyDetails:input_type -> StudyDetailsRequest
	5,  // 23: ExperimentApprovalService.RegisterData:input_type -> RegisterDataRequest
	6,  // 24: ExperimentApprovalService.RegisterStudy:input_type -> SubmitStudyRequest
	7,  // 25: ExperimentApprovalService.NewExperiment:input_type -> NewExperimentRequest
	8,  // 26: ExperimentApprovalService.GetExperimentProposal:input_type -> GetExperimentRequest
	13, // 27: ExperimentApprovalService.ApproveExperiment:input_type -> ApprovalRequest
	16, // 28: ExperimentApprovalService.RequestEvaluationPack:input_type -> EvaluationPackRequest
	23, // 29: Worker.Execute:input_type -> ExecuteRequest
	4,  // 30: StudyApprovalService.GetStudyDetails:output_type -> StudyDetailsResponse
	25, // 31: ExperimentApprovalService.RegisterData:output_type -> Status
	25, // 32: ExperimentApprovalService.RegisterStudy:output_type -> Status
	25, // 33: ExperimentApprovalService.NewExperiment:output_type -> Status
	9,  // 34: ExperimentApprovalService.GetExperimentProposal:output_type -> GetExperimentResponse
	25, // 35: ExperimentApprovalService.ApproveExperiment:output_type -> Status
	17, // 36: ExperimentApprovalService.RequestEvaluationPack:output_type -> EncryptedEvaluationPack
	25, // 37: Worker.Execute:output_type -> Status
	30, // [30:38] is the sub-list for method output_type
	22, // [22:30] is the sub-list for method input_type
	22, // [22:22] is the sub-list for extension type_name
	22, // [22:22] is the sub-list for extension extendee
	0,  // [0:22] is the sub-list for field type_name
}

func init() { file_irb_proto_init() }
func file_irb_proto_init() {
	if File_irb_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_irb_proto_rawDesc), len(file_irb_proto_rawDesc)),
			NumEnums:      2,
			NumMessages:   26,
			NumExtensions: 0,
			NumServices:   3,
		},
		GoTypes:           file_irb_proto_goTypes,
		DependencyIndexes: file_irb_proto_depIdxs,
		EnumInfos:         file_irb_proto_enumTypes,
		MessageInfos:      file_irb_proto_msgTypes,
	}.Build()
	File_irb_proto = out.File
	file_irb_proto_goTypes = nil
	file_irb_proto_depIdxs = nil
}

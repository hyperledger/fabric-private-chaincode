// Copyright IBM Corp. All Rights Reserved.
// Copyright 2020 Intel Corporation
//
// SPDX-License-Identifier: Apache-2.0

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0
// 	protoc        v3.6.1
// source: irb.proto

package protos

import (
	reflect "reflect"
	sync "sync"

	proto "github.com/golang/protobuf/proto"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type Approval_Decision int32

const (
	Approval_UNDEFINED Approval_Decision = 0
	Approval_APPROVED  Approval_Decision = 1
	Approval_REJECTED  Approval_Decision = 2
)

// Enum value maps for Approval_Decision.
var (
	Approval_Decision_name = map[int32]string{
		0: "UNDEFINED",
		1: "APPROVED",
		2: "REJECTED",
	}
	Approval_Decision_value = map[string]int32{
		"UNDEFINED": 0,
		"APPROVED":  1,
		"REJECTED":  2,
	}
)

func (x Approval_Decision) Enum() *Approval_Decision {
	p := new(Approval_Decision)
	*p = x
	return p
}

func (x Approval_Decision) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Approval_Decision) Descriptor() protoreflect.EnumDescriptor {
	return file_irb_proto_enumTypes[0].Descriptor()
}

func (Approval_Decision) Type() protoreflect.EnumType {
	return &file_irb_proto_enumTypes[0]
}

func (x Approval_Decision) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Approval_Decision.Descriptor instead.
func (Approval_Decision) EnumDescriptor() ([]byte, []int) {
	return file_irb_proto_rawDescGZIP(), []int{12, 0}
}

type Status_ReturnCode int32

const (
	Status_ERROR_UNKNOWN Status_ReturnCode = 0
	Status_OK            Status_ReturnCode = 1
)

// Enum value maps for Status_ReturnCode.
var (
	Status_ReturnCode_name = map[int32]string{
		0: "ERROR_UNKNOWN",
		1: "OK",
	}
	Status_ReturnCode_value = map[string]int32{
		"ERROR_UNKNOWN": 0,
		"OK":            1,
	}
)

func (x Status_ReturnCode) Enum() *Status_ReturnCode {
	p := new(Status_ReturnCode)
	*p = x
	return p
}

func (x Status_ReturnCode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Status_ReturnCode) Descriptor() protoreflect.EnumDescriptor {
	return file_irb_proto_enumTypes[1].Descriptor()
}

func (Status_ReturnCode) Type() protoreflect.EnumType {
	return &file_irb_proto_enumTypes[1]
}

func (x Status_ReturnCode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Status_ReturnCode.Descriptor instead.
func (Status_ReturnCode) EnumDescriptor() ([]byte, []int) {
	return file_irb_proto_rawDescGZIP(), []int{23, 0}
}

type StudyDetailsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StudyId string `protobuf:"bytes,1,opt,name=study_id,json=studyId,proto3" json:"study_id,omitempty"`
}

func (x *StudyDetailsRequest) Reset() {
	*x = StudyDetailsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_irb_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StudyDetailsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StudyDetailsRequest) ProtoMessage() {}

func (x *StudyDetailsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_irb_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StudyDetailsRequest.ProtoReflect.Descriptor instead.
func (*StudyDetailsRequest) Descriptor() ([]byte, []int) {
	return file_irb_proto_rawDescGZIP(), []int{0}
}

func (x *StudyDetailsRequest) GetStudyId() string {
	if x != nil {
		return x.StudyId
	}
	return ""
}

type StudyDetailsMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StudyId        string      `protobuf:"bytes,1,opt,name=study_id,json=studyId,proto3" json:"study_id,omitempty"`
	Metadata       string      `protobuf:"bytes,2,opt,name=metadata,proto3" json:"metadata,omitempty"`
	UserIdentities []*Identity `protobuf:"bytes,3,rep,name=user_identities,json=userIdentities,proto3" json:"user_identities,omitempty"`
}

func (x *StudyDetailsMessage) Reset() {
	*x = StudyDetailsMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_irb_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StudyDetailsMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StudyDetailsMessage) ProtoMessage() {}

func (x *StudyDetailsMessage) ProtoReflect() protoreflect.Message {
	mi := &file_irb_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StudyDetailsMessage.ProtoReflect.Descriptor instead.
func (*StudyDetailsMessage) Descriptor() ([]byte, []int) {
	return file_irb_proto_rawDescGZIP(), []int{1}
}

func (x *StudyDetailsMessage) GetStudyId() string {
	if x != nil {
		return x.StudyId
	}
	return ""
}

func (x *StudyDetailsMessage) GetMetadata() string {
	if x != nil {
		return x.Metadata
	}
	return ""
}

func (x *StudyDetailsMessage) GetUserIdentities() []*Identity {
	if x != nil {
		return x.UserIdentities
	}
	return nil
}

type StudyDetailsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StudyDetailsMessage []byte `protobuf:"bytes,1,opt,name=study_details_message,json=studyDetailsMessage,proto3" json:"study_details_message,omitempty"`
	// signed by Study Approval Service (SAS)
	// used to be verified by EAS when new study is created
	Signature []byte  `protobuf:"bytes,2,opt,name=signature,proto3" json:"signature,omitempty"`
	Status    *Status `protobuf:"bytes,3,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *StudyDetailsResponse) Reset() {
	*x = StudyDetailsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_irb_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StudyDetailsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StudyDetailsResponse) ProtoMessage() {}

func (x *StudyDetailsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_irb_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StudyDetailsResponse.ProtoReflect.Descriptor instead.
func (*StudyDetailsResponse) Descriptor() ([]byte, []int) {
	return file_irb_proto_rawDescGZIP(), []int{2}
}

func (x *StudyDetailsResponse) GetStudyDetailsMessage() []byte {
	if x != nil {
		return x.StudyDetailsMessage
	}
	return nil
}

func (x *StudyDetailsResponse) GetSignature() []byte {
	if x != nil {
		return x.Signature
	}
	return nil
}

func (x *StudyDetailsResponse) GetStatus() *Status {
	if x != nil {
		return x.Status
	}
	return nil
}

type RegisterDataRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Participant   *Identity `protobuf:"bytes,1,opt,name=participant,proto3" json:"participant,omitempty"`
	DecryptionKey []byte    `protobuf:"bytes,2,opt,name=decryption_key,json=decryptionKey,proto3" json:"decryption_key,omitempty"`
	DataHandler   string    `protobuf:"bytes,3,opt,name=data_handler,json=dataHandler,proto3" json:"data_handler,omitempty"`
	StudyId       string    `protobuf:"bytes,4,opt,name=study_id,json=studyId,proto3" json:"study_id,omitempty"`
}

func (x *RegisterDataRequest) Reset() {
	*x = RegisterDataRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_irb_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RegisterDataRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegisterDataRequest) ProtoMessage() {}

func (x *RegisterDataRequest) ProtoReflect() protoreflect.Message {
	mi := &file_irb_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegisterDataRequest.ProtoReflect.Descriptor instead.
func (*RegisterDataRequest) Descriptor() ([]byte, []int) {
	return file_irb_proto_rawDescGZIP(), []int{3}
}

func (x *RegisterDataRequest) GetParticipant() *Identity {
	if x != nil {
		return x.Participant
	}
	return nil
}

func (x *RegisterDataRequest) GetDecryptionKey() []byte {
	if x != nil {
		return x.DecryptionKey
	}
	return nil
}

func (x *RegisterDataRequest) GetDataHandler() string {
	if x != nil {
		return x.DataHandler
	}
	return ""
}

func (x *RegisterDataRequest) GetStudyId() string {
	if x != nil {
		return x.StudyId
	}
	return ""
}

type SubmitStudyRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Details *StudyDetailsResponse `protobuf:"bytes,1,opt,name=details,proto3" json:"details,omitempty"`
}

func (x *SubmitStudyRequest) Reset() {
	*x = SubmitStudyRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_irb_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SubmitStudyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubmitStudyRequest) ProtoMessage() {}

func (x *SubmitStudyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_irb_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubmitStudyRequest.ProtoReflect.Descriptor instead.
func (*SubmitStudyRequest) Descriptor() ([]byte, []int) {
	return file_irb_proto_rawDescGZIP(), []int{4}
}

func (x *SubmitStudyRequest) GetDetails() *StudyDetailsResponse {
	if x != nil {
		return x.Details
	}
	return nil
}

type NewExperimentRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Experiment *Experiment `protobuf:"bytes,1,opt,name=experiment,proto3" json:"experiment,omitempty"`
}

func (x *NewExperimentRequest) Reset() {
	*x = NewExperimentRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_irb_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NewExperimentRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NewExperimentRequest) ProtoMessage() {}

func (x *NewExperimentRequest) ProtoReflect() protoreflect.Message {
	mi := &file_irb_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NewExperimentRequest.ProtoReflect.Descriptor instead.
func (*NewExperimentRequest) Descriptor() ([]byte, []int) {
	return file_irb_proto_rawDescGZIP(), []int{5}
}

func (x *NewExperimentRequest) GetExperiment() *Experiment {
	if x != nil {
		return x.Experiment
	}
	return nil
}

type GetExperimentRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ExperimentId string `protobuf:"bytes,1,opt,name=experiment_id,json=experimentId,proto3" json:"experiment_id,omitempty"`
}

func (x *GetExperimentRequest) Reset() {
	*x = GetExperimentRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_irb_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetExperimentRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetExperimentRequest) ProtoMessage() {}

func (x *GetExperimentRequest) ProtoReflect() protoreflect.Message {
	mi := &file_irb_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetExperimentRequest.ProtoReflect.Descriptor instead.
func (*GetExperimentRequest) Descriptor() ([]byte, []int) {
	return file_irb_proto_rawDescGZIP(), []int{6}
}

func (x *GetExperimentRequest) GetExperimentId() string {
	if x != nil {
		return x.ExperimentId
	}
	return ""
}

type GetExperimentResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ExperimentProposal *ExperimentProposal `protobuf:"bytes,1,opt,name=experiment_proposal,json=experimentProposal,proto3" json:"experiment_proposal,omitempty"`
	Status             *Status             `protobuf:"bytes,2,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *GetExperimentResponse) Reset() {
	*x = GetExperimentResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_irb_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetExperimentResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetExperimentResponse) ProtoMessage() {}

func (x *GetExperimentResponse) ProtoReflect() protoreflect.Message {
	mi := &file_irb_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetExperimentResponse.ProtoReflect.Descriptor instead.
func (*GetExperimentResponse) Descriptor() ([]byte, []int) {
	return file_irb_proto_rawDescGZIP(), []int{7}
}

func (x *GetExperimentResponse) GetExperimentProposal() *ExperimentProposal {
	if x != nil {
		return x.ExperimentProposal
	}
	return nil
}

func (x *GetExperimentResponse) GetStatus() *Status {
	if x != nil {
		return x.Status
	}
	return nil
}

type WorkerCredentials struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IdentityBytes []byte `protobuf:"bytes,1,opt,name=identity_bytes,json=identityBytes,proto3" json:"identity_bytes,omitempty"`
	Attestation   []byte `protobuf:"bytes,2,opt,name=attestation,proto3" json:"attestation,omitempty"`
	Evidence      []byte `protobuf:"bytes,3,opt,name=evidence,proto3" json:"evidence,omitempty"`
}

func (x *WorkerCredentials) Reset() {
	*x = WorkerCredentials{}
	if protoimpl.UnsafeEnabled {
		mi := &file_irb_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WorkerCredentials) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WorkerCredentials) ProtoMessage() {}

func (x *WorkerCredentials) ProtoReflect() protoreflect.Message {
	mi := &file_irb_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WorkerCredentials.ProtoReflect.Descriptor instead.
func (*WorkerCredentials) Descriptor() ([]byte, []int) {
	return file_irb_proto_rawDescGZIP(), []int{8}
}

func (x *WorkerCredentials) GetIdentityBytes() []byte {
	if x != nil {
		return x.IdentityBytes
	}
	return nil
}

func (x *WorkerCredentials) GetAttestation() []byte {
	if x != nil {
		return x.Attestation
	}
	return nil
}

func (x *WorkerCredentials) GetEvidence() []byte {
	if x != nil {
		return x.Evidence
	}
	return nil
}

type ExperimentProposal struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StudyId           string             `protobuf:"bytes,1,opt,name=study_id,json=studyId,proto3" json:"study_id,omitempty"`
	ExperimentId      string             `protobuf:"bytes,2,opt,name=experiment_id,json=experimentId,proto3" json:"experiment_id,omitempty"`
	Mrenclave         string             `protobuf:"bytes,3,opt,name=mrenclave,proto3" json:"mrenclave,omitempty"`
	Metadata          string             `protobuf:"bytes,4,opt,name=metadata,proto3" json:"metadata,omitempty"`
	WorkerCredentials *WorkerCredentials `protobuf:"bytes,5,opt,name=worker_credentials,json=workerCredentials,proto3" json:"worker_credentials,omitempty"`
}

func (x *ExperimentProposal) Reset() {
	*x = ExperimentProposal{}
	if protoimpl.UnsafeEnabled {
		mi := &file_irb_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExperimentProposal) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExperimentProposal) ProtoMessage() {}

func (x *ExperimentProposal) ProtoReflect() protoreflect.Message {
	mi := &file_irb_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExperimentProposal.ProtoReflect.Descriptor instead.
func (*ExperimentProposal) Descriptor() ([]byte, []int) {
	return file_irb_proto_rawDescGZIP(), []int{9}
}

func (x *ExperimentProposal) GetStudyId() string {
	if x != nil {
		return x.StudyId
	}
	return ""
}

func (x *ExperimentProposal) GetExperimentId() string {
	if x != nil {
		return x.ExperimentId
	}
	return ""
}

func (x *ExperimentProposal) GetMrenclave() string {
	if x != nil {
		return x.Mrenclave
	}
	return ""
}

func (x *ExperimentProposal) GetMetadata() string {
	if x != nil {
		return x.Metadata
	}
	return ""
}

func (x *ExperimentProposal) GetWorkerCredentials() *WorkerCredentials {
	if x != nil {
		return x.WorkerCredentials
	}
	return nil
}

type Experiment struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// we keep bytes
	ExperimentProposal []byte    `protobuf:"bytes,1,opt,name=experiment_proposal,json=experimentProposal,proto3" json:"experiment_proposal,omitempty"`
	Approval           *Approval `protobuf:"bytes,2,opt,name=approval,proto3" json:"approval,omitempty"`
}

func (x *Experiment) Reset() {
	*x = Experiment{}
	if protoimpl.UnsafeEnabled {
		mi := &file_irb_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Experiment) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Experiment) ProtoMessage() {}

func (x *Experiment) ProtoReflect() protoreflect.Message {
	mi := &file_irb_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Experiment.ProtoReflect.Descriptor instead.
func (*Experiment) Descriptor() ([]byte, []int) {
	return file_irb_proto_rawDescGZIP(), []int{10}
}

func (x *Experiment) GetExperimentProposal() []byte {
	if x != nil {
		return x.ExperimentProposal
	}
	return nil
}

func (x *Experiment) GetApproval() *Approval {
	if x != nil {
		return x.Approval
	}
	return nil
}

type ApprovalRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Approval *Approval `protobuf:"bytes,1,opt,name=approval,proto3" json:"approval,omitempty"`
}

func (x *ApprovalRequest) Reset() {
	*x = ApprovalRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_irb_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ApprovalRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApprovalRequest) ProtoMessage() {}

func (x *ApprovalRequest) ProtoReflect() protoreflect.Message {
	mi := &file_irb_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ApprovalRequest.ProtoReflect.Descriptor instead.
func (*ApprovalRequest) Descriptor() ([]byte, []int) {
	return file_irb_proto_rawDescGZIP(), []int{11}
}

func (x *ApprovalRequest) GetApproval() *Approval {
	if x != nil {
		return x.Approval
	}
	return nil
}

type Approval struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ExperimentId string `protobuf:"bytes,1,opt,name=experiment_id,json=experimentId,proto3" json:"experiment_id,omitempty"`
	// serialized Experiment Proposal
	ExperimentProposal []byte            `protobuf:"bytes,2,opt,name=experiment_proposal,json=experimentProposal,proto3" json:"experiment_proposal,omitempty"`
	Decision           Approval_Decision `protobuf:"varint,3,opt,name=decision,proto3,enum=Approval_Decision" json:"decision,omitempty"`
	Approver           *Identity         `protobuf:"bytes,4,opt,name=approver,proto3" json:"approver,omitempty"`
}

func (x *Approval) Reset() {
	*x = Approval{}
	if protoimpl.UnsafeEnabled {
		mi := &file_irb_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Approval) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Approval) ProtoMessage() {}

func (x *Approval) ProtoReflect() protoreflect.Message {
	mi := &file_irb_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Approval.ProtoReflect.Descriptor instead.
func (*Approval) Descriptor() ([]byte, []int) {
	return file_irb_proto_rawDescGZIP(), []int{12}
}

func (x *Approval) GetExperimentId() string {
	if x != nil {
		return x.ExperimentId
	}
	return ""
}

func (x *Approval) GetExperimentProposal() []byte {
	if x != nil {
		return x.ExperimentProposal
	}
	return nil
}

func (x *Approval) GetDecision() Approval_Decision {
	if x != nil {
		return x.Decision
	}
	return Approval_UNDEFINED
}

func (x *Approval) GetApprover() *Identity {
	if x != nil {
		return x.Approver
	}
	return nil
}

type SignedApprovalMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Approval  []byte `protobuf:"bytes,1,opt,name=approval,proto3" json:"approval,omitempty"`
	Signature []byte `protobuf:"bytes,2,opt,name=signature,proto3" json:"signature,omitempty"`
}

func (x *SignedApprovalMessage) Reset() {
	*x = SignedApprovalMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_irb_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SignedApprovalMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SignedApprovalMessage) ProtoMessage() {}

func (x *SignedApprovalMessage) ProtoReflect() protoreflect.Message {
	mi := &file_irb_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SignedApprovalMessage.ProtoReflect.Descriptor instead.
func (*SignedApprovalMessage) Descriptor() ([]byte, []int) {
	return file_irb_proto_rawDescGZIP(), []int{13}
}

func (x *SignedApprovalMessage) GetApproval() []byte {
	if x != nil {
		return x.Approval
	}
	return nil
}

func (x *SignedApprovalMessage) GetSignature() []byte {
	if x != nil {
		return x.Signature
	}
	return nil
}

type EvaluationPackRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StudyId      string `protobuf:"bytes,1,opt,name=study_id,json=studyId,proto3" json:"study_id,omitempty"`
	ExperimentId string `protobuf:"bytes,2,opt,name=experiment_id,json=experimentId,proto3" json:"experiment_id,omitempty"`
}

func (x *EvaluationPackRequest) Reset() {
	*x = EvaluationPackRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_irb_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EvaluationPackRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EvaluationPackRequest) ProtoMessage() {}

func (x *EvaluationPackRequest) ProtoReflect() protoreflect.Message {
	mi := &file_irb_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EvaluationPackRequest.ProtoReflect.Descriptor instead.
func (*EvaluationPackRequest) Descriptor() ([]byte, []int) {
	return file_irb_proto_rawDescGZIP(), []int{14}
}

func (x *EvaluationPackRequest) GetStudyId() string {
	if x != nil {
		return x.StudyId
	}
	return ""
}

func (x *EvaluationPackRequest) GetExperimentId() string {
	if x != nil {
		return x.ExperimentId
	}
	return ""
}

type EncryptedEvaluationPack struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EncryptedEncryptionKey []byte `protobuf:"bytes,1,opt,name=encrypted_encryption_key,json=encryptedEncryptionKey,proto3" json:"encrypted_encryption_key,omitempty"`
	// this is ciphertext of a serialized EvaluationPack msg
	EncryptedEvaluationpack []byte `protobuf:"bytes,2,opt,name=encrypted_evaluationpack,json=encryptedEvaluationpack,proto3" json:"encrypted_evaluationpack,omitempty"`
}

func (x *EncryptedEvaluationPack) Reset() {
	*x = EncryptedEvaluationPack{}
	if protoimpl.UnsafeEnabled {
		mi := &file_irb_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EncryptedEvaluationPack) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EncryptedEvaluationPack) ProtoMessage() {}

func (x *EncryptedEvaluationPack) ProtoReflect() protoreflect.Message {
	mi := &file_irb_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EncryptedEvaluationPack.ProtoReflect.Descriptor instead.
func (*EncryptedEvaluationPack) Descriptor() ([]byte, []int) {
	return file_irb_proto_rawDescGZIP(), []int{15}
}

func (x *EncryptedEvaluationPack) GetEncryptedEncryptionKey() []byte {
	if x != nil {
		return x.EncryptedEncryptionKey
	}
	return nil
}

func (x *EncryptedEvaluationPack) GetEncryptedEvaluationpack() []byte {
	if x != nil {
		return x.EncryptedEvaluationpack
	}
	return nil
}

type EvaluationPackMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Item           []*EvaluationPackItem  `protobuf:"bytes,1,rep,name=item,proto3" json:"item,omitempty"`
	RegisteredData []*RegisterDataRequest `protobuf:"bytes,2,rep,name=registered_data,json=registeredData,proto3" json:"registered_data,omitempty"`
}

func (x *EvaluationPackMessage) Reset() {
	*x = EvaluationPackMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_irb_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EvaluationPackMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EvaluationPackMessage) ProtoMessage() {}

func (x *EvaluationPackMessage) ProtoReflect() protoreflect.Message {
	mi := &file_irb_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EvaluationPackMessage.ProtoReflect.Descriptor instead.
func (*EvaluationPackMessage) Descriptor() ([]byte, []int) {
	return file_irb_proto_rawDescGZIP(), []int{16}
}

func (x *EvaluationPackMessage) GetItem() []*EvaluationPackItem {
	if x != nil {
		return x.Item
	}
	return nil
}

func (x *EvaluationPackMessage) GetRegisteredData() []*RegisterDataRequest {
	if x != nil {
		return x.RegisteredData
	}
	return nil
}

type EvaluationPackItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DecryptionKey []byte `protobuf:"bytes,1,opt,name=decryption_key,json=decryptionKey,proto3" json:"decryption_key,omitempty"`
	DataHandler   string `protobuf:"bytes,2,opt,name=data_handler,json=dataHandler,proto3" json:"data_handler,omitempty"`
}

func (x *EvaluationPackItem) Reset() {
	*x = EvaluationPackItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_irb_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EvaluationPackItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EvaluationPackItem) ProtoMessage() {}

func (x *EvaluationPackItem) ProtoReflect() protoreflect.Message {
	mi := &file_irb_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EvaluationPackItem.ProtoReflect.Descriptor instead.
func (*EvaluationPackItem) Descriptor() ([]byte, []int) {
	return file_irb_proto_rawDescGZIP(), []int{17}
}

func (x *EvaluationPackItem) GetDecryptionKey() []byte {
	if x != nil {
		return x.DecryptionKey
	}
	return nil
}

func (x *EvaluationPackItem) GetDataHandler() string {
	if x != nil {
		return x.DataHandler
	}
	return ""
}

// note that the State message is just here to represent the KVS accessable via putState and getState functions within FPC
type State struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// as key we use study id
	State map[string]*Study `protobuf:"bytes,1,rep,name=state,proto3" json:"state,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	// as key we use an identity.uuid
	RegisteredData map[string]*Data `protobuf:"bytes,2,rep,name=registered_data,json=registeredData,proto3" json:"registered_data,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *State) Reset() {
	*x = State{}
	if protoimpl.UnsafeEnabled {
		mi := &file_irb_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *State) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*State) ProtoMessage() {}

func (x *State) ProtoReflect() protoreflect.Message {
	mi := &file_irb_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use State.ProtoReflect.Descriptor instead.
func (*State) Descriptor() ([]byte, []int) {
	return file_irb_proto_rawDescGZIP(), []int{18}
}

func (x *State) GetState() map[string]*Study {
	if x != nil {
		return x.State
	}
	return nil
}

func (x *State) GetRegisteredData() map[string]*Data {
	if x != nil {
		return x.RegisteredData
	}
	return nil
}

type Study struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StudyId     string        `protobuf:"bytes,1,opt,name=study_id,json=studyId,proto3" json:"study_id,omitempty"`
	Participant []*Identity   `protobuf:"bytes,2,rep,name=participant,proto3" json:"participant,omitempty"`
	Experiment  []*Experiment `protobuf:"bytes,3,rep,name=experiment,proto3" json:"experiment,omitempty"`
}

func (x *Study) Reset() {
	*x = Study{}
	if protoimpl.UnsafeEnabled {
		mi := &file_irb_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Study) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Study) ProtoMessage() {}

func (x *Study) ProtoReflect() protoreflect.Message {
	mi := &file_irb_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Study.ProtoReflect.Descriptor instead.
func (*Study) Descriptor() ([]byte, []int) {
	return file_irb_proto_rawDescGZIP(), []int{19}
}

func (x *Study) GetStudyId() string {
	if x != nil {
		return x.StudyId
	}
	return ""
}

func (x *Study) GetParticipant() []*Identity {
	if x != nil {
		return x.Participant
	}
	return nil
}

func (x *Study) GetExperiment() []*Experiment {
	if x != nil {
		return x.Experiment
	}
	return nil
}

type Data struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Participant   *Identity `protobuf:"bytes,1,opt,name=participant,proto3" json:"participant,omitempty"`
	DecryptionKey []byte    `protobuf:"bytes,2,opt,name=decryption_key,json=decryptionKey,proto3" json:"decryption_key,omitempty"`
	DataHandler   string    `protobuf:"bytes,3,opt,name=data_handler,json=dataHandler,proto3" json:"data_handler,omitempty"`
}

func (x *Data) Reset() {
	*x = Data{}
	if protoimpl.UnsafeEnabled {
		mi := &file_irb_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Data) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Data) ProtoMessage() {}

func (x *Data) ProtoReflect() protoreflect.Message {
	mi := &file_irb_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Data.ProtoReflect.Descriptor instead.
func (*Data) Descriptor() ([]byte, []int) {
	return file_irb_proto_rawDescGZIP(), []int{20}
}

func (x *Data) GetParticipant() *Identity {
	if x != nil {
		return x.Participant
	}
	return nil
}

func (x *Data) GetDecryptionKey() []byte {
	if x != nil {
		return x.DecryptionKey
	}
	return nil
}

func (x *Data) GetDataHandler() string {
	if x != nil {
		return x.DataHandler
	}
	return ""
}

type ExecuteRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ExperimentId            string `protobuf:"bytes,1,opt,name=experiment_id,json=experimentId,proto3" json:"experiment_id,omitempty"`
	EncryptedEvaluationPack []byte `protobuf:"bytes,2,opt,name=encrypted_evaluationPack,json=encryptedEvaluationPack,proto3" json:"encrypted_evaluationPack,omitempty"`
}

func (x *ExecuteRequest) Reset() {
	*x = ExecuteRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_irb_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExecuteRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExecuteRequest) ProtoMessage() {}

func (x *ExecuteRequest) ProtoReflect() protoreflect.Message {
	mi := &file_irb_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExecuteRequest.ProtoReflect.Descriptor instead.
func (*ExecuteRequest) Descriptor() ([]byte, []int) {
	return file_irb_proto_rawDescGZIP(), []int{21}
}

func (x *ExecuteRequest) GetExperimentId() string {
	if x != nil {
		return x.ExperimentId
	}
	return ""
}

func (x *ExecuteRequest) GetEncryptedEvaluationPack() []byte {
	if x != nil {
		return x.EncryptedEvaluationPack
	}
	return nil
}

// Common messages
type Identity struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uuid                string `protobuf:"bytes,1,opt,name=uuid,proto3" json:"uuid,omitempty"`
	PublicKey           []byte `protobuf:"bytes,2,opt,name=public_key,json=publicKey,proto3" json:"public_key,omitempty"`
	PublicEncryptionKey []byte `protobuf:"bytes,3,opt,name=public_encryption_key,json=publicEncryptionKey,proto3" json:"public_encryption_key,omitempty"`
}

func (x *Identity) Reset() {
	*x = Identity{}
	if protoimpl.UnsafeEnabled {
		mi := &file_irb_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Identity) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Identity) ProtoMessage() {}

func (x *Identity) ProtoReflect() protoreflect.Message {
	mi := &file_irb_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Identity.ProtoReflect.Descriptor instead.
func (*Identity) Descriptor() ([]byte, []int) {
	return file_irb_proto_rawDescGZIP(), []int{22}
}

func (x *Identity) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

func (x *Identity) GetPublicKey() []byte {
	if x != nil {
		return x.PublicKey
	}
	return nil
}

func (x *Identity) GetPublicEncryptionKey() []byte {
	if x != nil {
		return x.PublicEncryptionKey
	}
	return nil
}

type Status struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Msg        string            `protobuf:"bytes,1,opt,name=msg,proto3" json:"msg,omitempty"`
	ReturnCode Status_ReturnCode `protobuf:"varint,2,opt,name=return_code,json=returnCode,proto3,enum=Status_ReturnCode" json:"return_code,omitempty"`
}

func (x *Status) Reset() {
	*x = Status{}
	if protoimpl.UnsafeEnabled {
		mi := &file_irb_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Status) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Status) ProtoMessage() {}

func (x *Status) ProtoReflect() protoreflect.Message {
	mi := &file_irb_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Status.ProtoReflect.Descriptor instead.
func (*Status) Descriptor() ([]byte, []int) {
	return file_irb_proto_rawDescGZIP(), []int{23}
}

func (x *Status) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *Status) GetReturnCode() Status_ReturnCode {
	if x != nil {
		return x.ReturnCode
	}
	return Status_ERROR_UNKNOWN
}

var File_irb_proto protoreflect.FileDescriptor

var file_irb_proto_rawDesc = []byte{
	0x0a, 0x09, 0x69, 0x72, 0x62, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x30, 0x0a, 0x13, 0x53,
	0x74, 0x75, 0x64, 0x79, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x73, 0x74, 0x75, 0x64, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x74, 0x75, 0x64, 0x79, 0x49, 0x64, 0x22, 0x80, 0x01,
	0x0a, 0x13, 0x53, 0x74, 0x75, 0x64, 0x79, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x73, 0x74, 0x75, 0x64, 0x79, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x74, 0x75, 0x64, 0x79, 0x49, 0x64,
	0x12, 0x1a, 0x0a, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x32, 0x0a, 0x0f,
	0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x69, 0x65, 0x73, 0x18,
	0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x09, 0x2e, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79,
	0x52, 0x0e, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x69, 0x65, 0x73,
	0x22, 0x89, 0x01, 0x0a, 0x14, 0x53, 0x74, 0x75, 0x64, 0x79, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x32, 0x0a, 0x15, 0x73, 0x74, 0x75,
	0x64, 0x79, 0x5f, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x13, 0x73, 0x74, 0x75, 0x64, 0x79, 0x44,
	0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x1c, 0x0a,
	0x09, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c,
	0x52, 0x09, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x12, 0x1f, 0x0a, 0x06, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x07, 0x2e, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0xa7, 0x01, 0x0a,
	0x13, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x2b, 0x0a, 0x0b, 0x70, 0x61, 0x72, 0x74, 0x69, 0x63, 0x69, 0x70,
	0x61, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x09, 0x2e, 0x49, 0x64, 0x65, 0x6e,
	0x74, 0x69, 0x74, 0x79, 0x52, 0x0b, 0x70, 0x61, 0x72, 0x74, 0x69, 0x63, 0x69, 0x70, 0x61, 0x6e,
	0x74, 0x12, 0x25, 0x0a, 0x0e, 0x64, 0x65, 0x63, 0x72, 0x79, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x5f,
	0x6b, 0x65, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0d, 0x64, 0x65, 0x63, 0x72, 0x79,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x4b, 0x65, 0x79, 0x12, 0x21, 0x0a, 0x0c, 0x64, 0x61, 0x74, 0x61,
	0x5f, 0x68, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b,
	0x64, 0x61, 0x74, 0x61, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x72, 0x12, 0x19, 0x0a, 0x08, 0x73,
	0x74, 0x75, 0x64, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73,
	0x74, 0x75, 0x64, 0x79, 0x49, 0x64, 0x22, 0x45, 0x0a, 0x12, 0x53, 0x75, 0x62, 0x6d, 0x69, 0x74,
	0x53, 0x74, 0x75, 0x64, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2f, 0x0a, 0x07,
	0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e,
	0x53, 0x74, 0x75, 0x64, 0x79, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x52, 0x07, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x22, 0x43, 0x0a,
	0x14, 0x4e, 0x65, 0x77, 0x45, 0x78, 0x70, 0x65, 0x72, 0x69, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2b, 0x0a, 0x0a, 0x65, 0x78, 0x70, 0x65, 0x72, 0x69, 0x6d,
	0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x45, 0x78, 0x70, 0x65,
	0x72, 0x69, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x0a, 0x65, 0x78, 0x70, 0x65, 0x72, 0x69, 0x6d, 0x65,
	0x6e, 0x74, 0x22, 0x3b, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x45, 0x78, 0x70, 0x65, 0x72, 0x69, 0x6d,
	0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x23, 0x0a, 0x0d, 0x65, 0x78,
	0x70, 0x65, 0x72, 0x69, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0c, 0x65, 0x78, 0x70, 0x65, 0x72, 0x69, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x22,
	0x7e, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x45, 0x78, 0x70, 0x65, 0x72, 0x69, 0x6d, 0x65, 0x6e, 0x74,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x44, 0x0a, 0x13, 0x65, 0x78, 0x70, 0x65,
	0x72, 0x69, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x70, 0x72, 0x6f, 0x70, 0x6f, 0x73, 0x61, 0x6c, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x45, 0x78, 0x70, 0x65, 0x72, 0x69, 0x6d, 0x65,
	0x6e, 0x74, 0x50, 0x72, 0x6f, 0x70, 0x6f, 0x73, 0x61, 0x6c, 0x52, 0x12, 0x65, 0x78, 0x70, 0x65,
	0x72, 0x69, 0x6d, 0x65, 0x6e, 0x74, 0x50, 0x72, 0x6f, 0x70, 0x6f, 0x73, 0x61, 0x6c, 0x12, 0x1f,
	0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x07,
	0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22,
	0x78, 0x0a, 0x11, 0x57, 0x6f, 0x72, 0x6b, 0x65, 0x72, 0x43, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74,
	0x69, 0x61, 0x6c, 0x73, 0x12, 0x25, 0x0a, 0x0e, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79,
	0x5f, 0x62, 0x79, 0x74, 0x65, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0d, 0x69, 0x64,
	0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x42, 0x79, 0x74, 0x65, 0x73, 0x12, 0x20, 0x0a, 0x0b, 0x61,
	0x74, 0x74, 0x65, 0x73, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c,
	0x52, 0x0b, 0x61, 0x74, 0x74, 0x65, 0x73, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1a, 0x0a,
	0x08, 0x65, 0x76, 0x69, 0x64, 0x65, 0x6e, 0x63, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52,
	0x08, 0x65, 0x76, 0x69, 0x64, 0x65, 0x6e, 0x63, 0x65, 0x22, 0xd1, 0x01, 0x0a, 0x12, 0x45, 0x78,
	0x70, 0x65, 0x72, 0x69, 0x6d, 0x65, 0x6e, 0x74, 0x50, 0x72, 0x6f, 0x70, 0x6f, 0x73, 0x61, 0x6c,
	0x12, 0x19, 0x0a, 0x08, 0x73, 0x74, 0x75, 0x64, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x73, 0x74, 0x75, 0x64, 0x79, 0x49, 0x64, 0x12, 0x23, 0x0a, 0x0d, 0x65,
	0x78, 0x70, 0x65, 0x72, 0x69, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0c, 0x65, 0x78, 0x70, 0x65, 0x72, 0x69, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x64,
	0x12, 0x1c, 0x0a, 0x09, 0x6d, 0x72, 0x65, 0x6e, 0x63, 0x6c, 0x61, 0x76, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x6d, 0x72, 0x65, 0x6e, 0x63, 0x6c, 0x61, 0x76, 0x65, 0x12, 0x1a,
	0x0a, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x41, 0x0a, 0x12, 0x77, 0x6f,
	0x72, 0x6b, 0x65, 0x72, 0x5f, 0x63, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x73,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x57, 0x6f, 0x72, 0x6b, 0x65, 0x72, 0x43,
	0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x73, 0x52, 0x11, 0x77, 0x6f, 0x72, 0x6b,
	0x65, 0x72, 0x43, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x73, 0x22, 0x64, 0x0a,
	0x0a, 0x45, 0x78, 0x70, 0x65, 0x72, 0x69, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x2f, 0x0a, 0x13, 0x65,
	0x78, 0x70, 0x65, 0x72, 0x69, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x70, 0x72, 0x6f, 0x70, 0x6f, 0x73,
	0x61, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x12, 0x65, 0x78, 0x70, 0x65, 0x72, 0x69,
	0x6d, 0x65, 0x6e, 0x74, 0x50, 0x72, 0x6f, 0x70, 0x6f, 0x73, 0x61, 0x6c, 0x12, 0x25, 0x0a, 0x08,
	0x61, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x61, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x09,
	0x2e, 0x41, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x61, 0x6c, 0x52, 0x08, 0x61, 0x70, 0x70, 0x72, 0x6f,
	0x76, 0x61, 0x6c, 0x22, 0x38, 0x0a, 0x0f, 0x41, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x61, 0x6c, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x25, 0x0a, 0x08, 0x61, 0x70, 0x70, 0x72, 0x6f, 0x76,
	0x61, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x09, 0x2e, 0x41, 0x70, 0x70, 0x72, 0x6f,
	0x76, 0x61, 0x6c, 0x52, 0x08, 0x61, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x61, 0x6c, 0x22, 0xee, 0x01,
	0x0a, 0x08, 0x41, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x61, 0x6c, 0x12, 0x23, 0x0a, 0x0d, 0x65, 0x78,
	0x70, 0x65, 0x72, 0x69, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0c, 0x65, 0x78, 0x70, 0x65, 0x72, 0x69, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12,
	0x2f, 0x0a, 0x13, 0x65, 0x78, 0x70, 0x65, 0x72, 0x69, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x70, 0x72,
	0x6f, 0x70, 0x6f, 0x73, 0x61, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x12, 0x65, 0x78,
	0x70, 0x65, 0x72, 0x69, 0x6d, 0x65, 0x6e, 0x74, 0x50, 0x72, 0x6f, 0x70, 0x6f, 0x73, 0x61, 0x6c,
	0x12, 0x2e, 0x0a, 0x08, 0x64, 0x65, 0x63, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x12, 0x2e, 0x41, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x61, 0x6c, 0x2e, 0x44, 0x65,
	0x63, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x08, 0x64, 0x65, 0x63, 0x69, 0x73, 0x69, 0x6f, 0x6e,
	0x12, 0x25, 0x0a, 0x08, 0x61, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x65, 0x72, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x09, 0x2e, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x52, 0x08, 0x61,
	0x70, 0x70, 0x72, 0x6f, 0x76, 0x65, 0x72, 0x22, 0x35, 0x0a, 0x08, 0x44, 0x65, 0x63, 0x69, 0x73,
	0x69, 0x6f, 0x6e, 0x12, 0x0d, 0x0a, 0x09, 0x55, 0x4e, 0x44, 0x45, 0x46, 0x49, 0x4e, 0x45, 0x44,
	0x10, 0x00, 0x12, 0x0c, 0x0a, 0x08, 0x41, 0x50, 0x50, 0x52, 0x4f, 0x56, 0x45, 0x44, 0x10, 0x01,
	0x12, 0x0c, 0x0a, 0x08, 0x52, 0x45, 0x4a, 0x45, 0x43, 0x54, 0x45, 0x44, 0x10, 0x02, 0x22, 0x51,
	0x0a, 0x15, 0x53, 0x69, 0x67, 0x6e, 0x65, 0x64, 0x41, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x61, 0x6c,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x61, 0x70, 0x70, 0x72, 0x6f,
	0x76, 0x61, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x08, 0x61, 0x70, 0x70, 0x72, 0x6f,
	0x76, 0x61, 0x6c, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x09, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72,
	0x65, 0x22, 0x57, 0x0a, 0x15, 0x45, 0x76, 0x61, 0x6c, 0x75, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x50,
	0x61, 0x63, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x73, 0x74,
	0x75, 0x64, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x74,
	0x75, 0x64, 0x79, 0x49, 0x64, 0x12, 0x23, 0x0a, 0x0d, 0x65, 0x78, 0x70, 0x65, 0x72, 0x69, 0x6d,
	0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x65, 0x78,
	0x70, 0x65, 0x72, 0x69, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x22, 0x8e, 0x01, 0x0a, 0x17, 0x45,
	0x6e, 0x63, 0x72, 0x79, 0x70, 0x74, 0x65, 0x64, 0x45, 0x76, 0x61, 0x6c, 0x75, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x50, 0x61, 0x63, 0x6b, 0x12, 0x38, 0x0a, 0x18, 0x65, 0x6e, 0x63, 0x72, 0x79, 0x70,
	0x74, 0x65, 0x64, 0x5f, 0x65, 0x6e, 0x63, 0x72, 0x79, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6b,
	0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x16, 0x65, 0x6e, 0x63, 0x72, 0x79, 0x70,
	0x74, 0x65, 0x64, 0x45, 0x6e, 0x63, 0x72, 0x79, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x4b, 0x65, 0x79,
	0x12, 0x39, 0x0a, 0x18, 0x65, 0x6e, 0x63, 0x72, 0x79, 0x70, 0x74, 0x65, 0x64, 0x5f, 0x65, 0x76,
	0x61, 0x6c, 0x75, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x70, 0x61, 0x63, 0x6b, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0c, 0x52, 0x17, 0x65, 0x6e, 0x63, 0x72, 0x79, 0x70, 0x74, 0x65, 0x64, 0x45, 0x76, 0x61,
	0x6c, 0x75, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x70, 0x61, 0x63, 0x6b, 0x22, 0x7f, 0x0a, 0x15, 0x45,
	0x76, 0x61, 0x6c, 0x75, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x61, 0x63, 0x6b, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x12, 0x27, 0x0a, 0x04, 0x69, 0x74, 0x65, 0x6d, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x13, 0x2e, 0x45, 0x76, 0x61, 0x6c, 0x75, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x50,
	0x61, 0x63, 0x6b, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x04, 0x69, 0x74, 0x65, 0x6d, 0x12, 0x3d, 0x0a,
	0x0f, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x65, 0x64, 0x5f, 0x64, 0x61, 0x74, 0x61,
	0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65,
	0x72, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x0e, 0x72, 0x65,
	0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x65, 0x64, 0x44, 0x61, 0x74, 0x61, 0x22, 0x5e, 0x0a, 0x12,
	0x45, 0x76, 0x61, 0x6c, 0x75, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x61, 0x63, 0x6b, 0x49, 0x74,
	0x65, 0x6d, 0x12, 0x25, 0x0a, 0x0e, 0x64, 0x65, 0x63, 0x72, 0x79, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x5f, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0d, 0x64, 0x65, 0x63, 0x72,
	0x79, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x4b, 0x65, 0x79, 0x12, 0x21, 0x0a, 0x0c, 0x64, 0x61, 0x74,
	0x61, 0x5f, 0x68, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0b, 0x64, 0x61, 0x74, 0x61, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x72, 0x22, 0x81, 0x02, 0x0a,
	0x05, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x27, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x65, 0x2e, 0x53, 0x74,
	0x61, 0x74, 0x65, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x12,
	0x43, 0x0a, 0x0f, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x65, 0x64, 0x5f, 0x64, 0x61,
	0x74, 0x61, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x65,
	0x2e, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x65, 0x64, 0x44, 0x61, 0x74, 0x61, 0x45,
	0x6e, 0x74, 0x72, 0x79, 0x52, 0x0e, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x65, 0x64,
	0x44, 0x61, 0x74, 0x61, 0x1a, 0x40, 0x0a, 0x0a, 0x53, 0x74, 0x61, 0x74, 0x65, 0x45, 0x6e, 0x74,
	0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x03, 0x6b, 0x65, 0x79, 0x12, 0x1c, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x06, 0x2e, 0x53, 0x74, 0x75, 0x64, 0x79, 0x52, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x1a, 0x48, 0x0a, 0x13, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74,
	0x65, 0x72, 0x65, 0x64, 0x44, 0x61, 0x74, 0x61, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a,
	0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12,
	0x1b, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x05,
	0x2e, 0x44, 0x61, 0x74, 0x61, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01,
	0x22, 0x7c, 0x0a, 0x05, 0x53, 0x74, 0x75, 0x64, 0x79, 0x12, 0x19, 0x0a, 0x08, 0x73, 0x74, 0x75,
	0x64, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x74, 0x75,
	0x64, 0x79, 0x49, 0x64, 0x12, 0x2b, 0x0a, 0x0b, 0x70, 0x61, 0x72, 0x74, 0x69, 0x63, 0x69, 0x70,
	0x61, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x09, 0x2e, 0x49, 0x64, 0x65, 0x6e,
	0x74, 0x69, 0x74, 0x79, 0x52, 0x0b, 0x70, 0x61, 0x72, 0x74, 0x69, 0x63, 0x69, 0x70, 0x61, 0x6e,
	0x74, 0x12, 0x2b, 0x0a, 0x0a, 0x65, 0x78, 0x70, 0x65, 0x72, 0x69, 0x6d, 0x65, 0x6e, 0x74, 0x18,
	0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x45, 0x78, 0x70, 0x65, 0x72, 0x69, 0x6d, 0x65,
	0x6e, 0x74, 0x52, 0x0a, 0x65, 0x78, 0x70, 0x65, 0x72, 0x69, 0x6d, 0x65, 0x6e, 0x74, 0x22, 0x7d,
	0x0a, 0x04, 0x44, 0x61, 0x74, 0x61, 0x12, 0x2b, 0x0a, 0x0b, 0x70, 0x61, 0x72, 0x74, 0x69, 0x63,
	0x69, 0x70, 0x61, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x09, 0x2e, 0x49, 0x64,
	0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x52, 0x0b, 0x70, 0x61, 0x72, 0x74, 0x69, 0x63, 0x69, 0x70,
	0x61, 0x6e, 0x74, 0x12, 0x25, 0x0a, 0x0e, 0x64, 0x65, 0x63, 0x72, 0x79, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0d, 0x64, 0x65, 0x63,
	0x72, 0x79, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x4b, 0x65, 0x79, 0x12, 0x21, 0x0a, 0x0c, 0x64, 0x61,
	0x74, 0x61, 0x5f, 0x68, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0b, 0x64, 0x61, 0x74, 0x61, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x72, 0x22, 0x70, 0x0a,
	0x0e, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x23, 0x0a, 0x0d, 0x65, 0x78, 0x70, 0x65, 0x72, 0x69, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x65, 0x78, 0x70, 0x65, 0x72, 0x69, 0x6d, 0x65,
	0x6e, 0x74, 0x49, 0x64, 0x12, 0x39, 0x0a, 0x18, 0x65, 0x6e, 0x63, 0x72, 0x79, 0x70, 0x74, 0x65,
	0x64, 0x5f, 0x65, 0x76, 0x61, 0x6c, 0x75, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x61, 0x63, 0x6b,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x17, 0x65, 0x6e, 0x63, 0x72, 0x79, 0x70, 0x74, 0x65,
	0x64, 0x45, 0x76, 0x61, 0x6c, 0x75, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x61, 0x63, 0x6b, 0x22,
	0x71, 0x0a, 0x08, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x75,
	0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x75, 0x75, 0x69, 0x64, 0x12,
	0x1d, 0x0a, 0x0a, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0c, 0x52, 0x09, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x4b, 0x65, 0x79, 0x12, 0x32,
	0x0a, 0x15, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x5f, 0x65, 0x6e, 0x63, 0x72, 0x79, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x13, 0x70,
	0x75, 0x62, 0x6c, 0x69, 0x63, 0x45, 0x6e, 0x63, 0x72, 0x79, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x4b,
	0x65, 0x79, 0x22, 0x78, 0x0a, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x10, 0x0a, 0x03,
	0x6d, 0x73, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x12, 0x33,
	0x0a, 0x0b, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x12, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x2e, 0x52, 0x65, 0x74,
	0x75, 0x72, 0x6e, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x43,
	0x6f, 0x64, 0x65, 0x22, 0x27, 0x0a, 0x0a, 0x52, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x43, 0x6f, 0x64,
	0x65, 0x12, 0x11, 0x0a, 0x0d, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x5f, 0x55, 0x4e, 0x4b, 0x4e, 0x4f,
	0x57, 0x4e, 0x10, 0x00, 0x12, 0x06, 0x0a, 0x02, 0x4f, 0x4b, 0x10, 0x01, 0x32, 0x58, 0x0a, 0x14,
	0x53, 0x74, 0x75, 0x64, 0x79, 0x41, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x61, 0x6c, 0x53, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x12, 0x40, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x53, 0x74, 0x75, 0x64, 0x79,
	0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x12, 0x14, 0x2e, 0x53, 0x74, 0x75, 0x64, 0x79, 0x44,
	0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x15, 0x2e,
	0x53, 0x74, 0x75, 0x64, 0x79, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x32, 0xf9, 0x02, 0x0a, 0x19, 0x45, 0x78, 0x70, 0x65, 0x72,
	0x69, 0x6d, 0x65, 0x6e, 0x74, 0x41, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x61, 0x6c, 0x53, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x12, 0x2f, 0x0a, 0x0c, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72,
	0x44, 0x61, 0x74, 0x61, 0x12, 0x14, 0x2e, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x44,
	0x61, 0x74, 0x61, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x07, 0x2e, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x22, 0x00, 0x12, 0x2f, 0x0a, 0x0d, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65,
	0x72, 0x53, 0x74, 0x75, 0x64, 0x79, 0x12, 0x13, 0x2e, 0x53, 0x75, 0x62, 0x6d, 0x69, 0x74, 0x53,
	0x74, 0x75, 0x64, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x07, 0x2e, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x22, 0x00, 0x12, 0x31, 0x0a, 0x0d, 0x4e, 0x65, 0x77, 0x45, 0x78, 0x70,
	0x65, 0x72, 0x69, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x15, 0x2e, 0x4e, 0x65, 0x77, 0x45, 0x78, 0x70,
	0x65, 0x72, 0x69, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x07,
	0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x00, 0x12, 0x48, 0x0a, 0x15, 0x47, 0x65, 0x74,
	0x45, 0x78, 0x70, 0x65, 0x72, 0x69, 0x6d, 0x65, 0x6e, 0x74, 0x50, 0x72, 0x6f, 0x70, 0x6f, 0x73,
	0x61, 0x6c, 0x12, 0x15, 0x2e, 0x47, 0x65, 0x74, 0x45, 0x78, 0x70, 0x65, 0x72, 0x69, 0x6d, 0x65,
	0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x47, 0x65, 0x74, 0x45,
	0x78, 0x70, 0x65, 0x72, 0x69, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x00, 0x12, 0x30, 0x0a, 0x11, 0x41, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x65, 0x45, 0x78,
	0x70, 0x65, 0x72, 0x69, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x10, 0x2e, 0x41, 0x70, 0x70, 0x72, 0x6f,
	0x76, 0x61, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x07, 0x2e, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x22, 0x00, 0x12, 0x4b, 0x0a, 0x15, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x45, 0x76, 0x61, 0x6c, 0x75, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x61, 0x63, 0x6b, 0x12, 0x16,
	0x2e, 0x45, 0x76, 0x61, 0x6c, 0x75, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x61, 0x63, 0x6b, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x18, 0x2e, 0x45, 0x6e, 0x63, 0x72, 0x79, 0x70, 0x74,
	0x65, 0x64, 0x45, 0x76, 0x61, 0x6c, 0x75, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x61, 0x63, 0x6b,
	0x22, 0x00, 0x32, 0x2f, 0x0a, 0x06, 0x57, 0x6f, 0x72, 0x6b, 0x65, 0x72, 0x12, 0x25, 0x0a, 0x07,
	0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x65, 0x12, 0x0f, 0x2e, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x07, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x22, 0x00, 0x42, 0x4e, 0x5a, 0x4c, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f,
	0x6d, 0x2f, 0x68, 0x79, 0x70, 0x65, 0x72, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x72, 0x2f, 0x66, 0x61,
	0x62, 0x72, 0x69, 0x63, 0x2d, 0x70, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x2d, 0x63, 0x68, 0x61,
	0x69, 0x6e, 0x63, 0x6f, 0x64, 0x65, 0x2f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x73, 0x2f, 0x64,
	0x65, 0x6d, 0x6f, 0x73, 0x2f, 0x69, 0x72, 0x62, 0x2f, 0x70, 0x6b, 0x67, 0x2f, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x73, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_irb_proto_rawDescOnce sync.Once
	file_irb_proto_rawDescData = file_irb_proto_rawDesc
)

func file_irb_proto_rawDescGZIP() []byte {
	file_irb_proto_rawDescOnce.Do(func() {
		file_irb_proto_rawDescData = protoimpl.X.CompressGZIP(file_irb_proto_rawDescData)
	})
	return file_irb_proto_rawDescData
}

var file_irb_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_irb_proto_msgTypes = make([]protoimpl.MessageInfo, 26)
var file_irb_proto_goTypes = []interface{}{
	(Approval_Decision)(0),          // 0: Approval.Decision
	(Status_ReturnCode)(0),          // 1: Status.ReturnCode
	(*StudyDetailsRequest)(nil),     // 2: StudyDetailsRequest
	(*StudyDetailsMessage)(nil),     // 3: StudyDetailsMessage
	(*StudyDetailsResponse)(nil),    // 4: StudyDetailsResponse
	(*RegisterDataRequest)(nil),     // 5: RegisterDataRequest
	(*SubmitStudyRequest)(nil),      // 6: SubmitStudyRequest
	(*NewExperimentRequest)(nil),    // 7: NewExperimentRequest
	(*GetExperimentRequest)(nil),    // 8: GetExperimentRequest
	(*GetExperimentResponse)(nil),   // 9: GetExperimentResponse
	(*WorkerCredentials)(nil),       // 10: WorkerCredentials
	(*ExperimentProposal)(nil),      // 11: ExperimentProposal
	(*Experiment)(nil),              // 12: Experiment
	(*ApprovalRequest)(nil),         // 13: ApprovalRequest
	(*Approval)(nil),                // 14: Approval
	(*SignedApprovalMessage)(nil),   // 15: SignedApprovalMessage
	(*EvaluationPackRequest)(nil),   // 16: EvaluationPackRequest
	(*EncryptedEvaluationPack)(nil), // 17: EncryptedEvaluationPack
	(*EvaluationPackMessage)(nil),   // 18: EvaluationPackMessage
	(*EvaluationPackItem)(nil),      // 19: EvaluationPackItem
	(*State)(nil),                   // 20: State
	(*Study)(nil),                   // 21: Study
	(*Data)(nil),                    // 22: Data
	(*ExecuteRequest)(nil),          // 23: ExecuteRequest
	(*Identity)(nil),                // 24: Identity
	(*Status)(nil),                  // 25: Status
	nil,                             // 26: State.StateEntry
	nil,                             // 27: State.RegisteredDataEntry
}
var file_irb_proto_depIdxs = []int32{
	24, // 0: StudyDetailsMessage.user_identities:type_name -> Identity
	25, // 1: StudyDetailsResponse.status:type_name -> Status
	24, // 2: RegisterDataRequest.participant:type_name -> Identity
	4,  // 3: SubmitStudyRequest.details:type_name -> StudyDetailsResponse
	12, // 4: NewExperimentRequest.experiment:type_name -> Experiment
	11, // 5: GetExperimentResponse.experiment_proposal:type_name -> ExperimentProposal
	25, // 6: GetExperimentResponse.status:type_name -> Status
	10, // 7: ExperimentProposal.worker_credentials:type_name -> WorkerCredentials
	14, // 8: Experiment.approval:type_name -> Approval
	14, // 9: ApprovalRequest.approval:type_name -> Approval
	0,  // 10: Approval.decision:type_name -> Approval.Decision
	24, // 11: Approval.approver:type_name -> Identity
	19, // 12: EvaluationPackMessage.item:type_name -> EvaluationPackItem
	5,  // 13: EvaluationPackMessage.registered_data:type_name -> RegisterDataRequest
	26, // 14: State.state:type_name -> State.StateEntry
	27, // 15: State.registered_data:type_name -> State.RegisteredDataEntry
	24, // 16: Study.participant:type_name -> Identity
	12, // 17: Study.experiment:type_name -> Experiment
	24, // 18: Data.participant:type_name -> Identity
	1,  // 19: Status.return_code:type_name -> Status.ReturnCode
	21, // 20: State.StateEntry.value:type_name -> Study
	22, // 21: State.RegisteredDataEntry.value:type_name -> Data
	2,  // 22: StudyApprovalService.GetStudyDetails:input_type -> StudyDetailsRequest
	5,  // 23: ExperimentApprovalService.RegisterData:input_type -> RegisterDataRequest
	6,  // 24: ExperimentApprovalService.CreateStudy:input_type -> SubmitStudyRequest
	7,  // 25: ExperimentApprovalService.SubmitExperiment:input_type -> NewExperimentRequest
	8,  // 26: ExperimentApprovalService.GetExperimentProposal:input_type -> GetExperimentRequest
	13, // 27: ExperimentApprovalService.ApproveExperiment:input_type -> ApprovalRequest
	16, // 28: ExperimentApprovalService.RequestEvaluationPack:input_type -> EvaluationPackRequest
	23, // 29: Worker.Execute:input_type -> ExecuteRequest
	4,  // 30: StudyApprovalService.GetStudyDetails:output_type -> StudyDetailsResponse
	25, // 31: ExperimentApprovalService.RegisterData:output_type -> Status
	25, // 32: ExperimentApprovalService.CreateStudy:output_type -> Status
	25, // 33: ExperimentApprovalService.SubmitExperiment:output_type -> Status
	9,  // 34: ExperimentApprovalService.GetExperimentProposal:output_type -> GetExperimentResponse
	25, // 35: ExperimentApprovalService.ApproveExperiment:output_type -> Status
	17, // 36: ExperimentApprovalService.RequestEvaluationPack:output_type -> EncryptedEvaluationPack
	25, // 37: Worker.Execute:output_type -> Status
	30, // [30:38] is the sub-list for method output_type
	22, // [22:30] is the sub-list for method input_type
	22, // [22:22] is the sub-list for extension type_name
	22, // [22:22] is the sub-list for extension extendee
	0,  // [0:22] is the sub-list for field type_name
}

func init() { file_irb_proto_init() }
func file_irb_proto_init() {
	if File_irb_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_irb_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StudyDetailsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_irb_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StudyDetailsMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_irb_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StudyDetailsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_irb_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RegisterDataRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_irb_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SubmitStudyRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_irb_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NewExperimentRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_irb_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetExperimentRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_irb_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetExperimentResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_irb_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WorkerCredentials); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_irb_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExperimentProposal); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_irb_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Experiment); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_irb_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ApprovalRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_irb_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Approval); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_irb_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SignedApprovalMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_irb_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EvaluationPackRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_irb_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EncryptedEvaluationPack); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_irb_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EvaluationPackMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_irb_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EvaluationPackItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_irb_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*State); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_irb_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Study); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_irb_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Data); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_irb_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExecuteRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_irb_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Identity); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_irb_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Status); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_irb_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   26,
			NumExtensions: 0,
			NumServices:   3,
		},
		GoTypes:           file_irb_proto_goTypes,
		DependencyIndexes: file_irb_proto_depIdxs,
		EnumInfos:         file_irb_proto_enumTypes,
		MessageInfos:      file_irb_proto_msgTypes,
	}.Build()
	File_irb_proto = out.File
	file_irb_proto_rawDesc = nil
	file_irb_proto_goTypes = nil
	file_irb_proto_depIdxs = nil
}

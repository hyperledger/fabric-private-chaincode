// Copyright IBM Corp. All Rights Reserved.
// Copyright 2020 Intel Corporation
//
// SPDX-License-Identifier: Apache-2.0

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v4.22.3
// source: fpc/trusted_ledger.proto

package protos

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// public metadata get_state_metadata(
//
//	const char *namespace,
//	const char *key);
type GetMetadataRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Namespace     string                 `protobuf:"bytes,1,opt,name=namespace,proto3" json:"namespace,omitempty"`
	Key           string                 `protobuf:"bytes,2,opt,name=key,proto3" json:"key,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetMetadataRequest) Reset() {
	*x = GetMetadataRequest{}
	mi := &file_fpc_trusted_ledger_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetMetadataRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMetadataRequest) ProtoMessage() {}

func (x *GetMetadataRequest) ProtoReflect() protoreflect.Message {
	mi := &file_fpc_trusted_ledger_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMetadataRequest.ProtoReflect.Descriptor instead.
func (*GetMetadataRequest) Descriptor() ([]byte, []int) {
	return file_fpc_trusted_ledger_proto_rawDescGZIP(), []int{0}
}

func (x *GetMetadataRequest) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *GetMetadataRequest) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

type GetMetadataResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Hash          []byte                 `protobuf:"bytes,1,opt,name=hash,proto3" json:"hash,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetMetadataResponse) Reset() {
	*x = GetMetadataResponse{}
	mi := &file_fpc_trusted_ledger_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetMetadataResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMetadataResponse) ProtoMessage() {}

func (x *GetMetadataResponse) ProtoReflect() protoreflect.Message {
	mi := &file_fpc_trusted_ledger_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMetadataResponse.ProtoReflect.Descriptor instead.
func (*GetMetadataResponse) Descriptor() ([]byte, []int) {
	return file_fpc_trusted_ledger_proto_rawDescGZIP(), []int{1}
}

func (x *GetMetadataResponse) GetHash() []byte {
	if x != nil {
		return x.Hash
	}
	return nil
}

// public metadata get_multi_state_metadata(
//
//	const char *namespace,
//	const char *comp_key);
type GetMultiMetadataRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Namespace     string                 `protobuf:"bytes,1,opt,name=namespace,proto3" json:"namespace,omitempty"`
	CompoKey      string                 `protobuf:"bytes,2,opt,name=compo_key,json=compoKey,proto3" json:"compo_key,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetMultiMetadataRequest) Reset() {
	*x = GetMultiMetadataRequest{}
	mi := &file_fpc_trusted_ledger_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetMultiMetadataRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMultiMetadataRequest) ProtoMessage() {}

func (x *GetMultiMetadataRequest) ProtoReflect() protoreflect.Message {
	mi := &file_fpc_trusted_ledger_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMultiMetadataRequest.ProtoReflect.Descriptor instead.
func (*GetMultiMetadataRequest) Descriptor() ([]byte, []int) {
	return file_fpc_trusted_ledger_proto_rawDescGZIP(), []int{2}
}

func (x *GetMultiMetadataRequest) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *GetMultiMetadataRequest) GetCompoKey() string {
	if x != nil {
		return x.CompoKey
	}
	return ""
}

type GetMultiMetadataResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// SHA-256 over value found by key (or all-zero if key absent)
	Hash          []byte `protobuf:"bytes,1,opt,name=hash,proto3" json:"hash,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetMultiMetadataResponse) Reset() {
	*x = GetMultiMetadataResponse{}
	mi := &file_fpc_trusted_ledger_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetMultiMetadataResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMultiMetadataResponse) ProtoMessage() {}

func (x *GetMultiMetadataResponse) ProtoReflect() protoreflect.Message {
	mi := &file_fpc_trusted_ledger_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMultiMetadataResponse.ProtoReflect.Descriptor instead.
func (*GetMultiMetadataResponse) Descriptor() ([]byte, []int) {
	return file_fpc_trusted_ledger_proto_rawDescGZIP(), []int{3}
}

func (x *GetMultiMetadataResponse) GetHash() []byte {
	if x != nil {
		return x.Hash
	}
	return nil
}

// verify that a given identity is part of a msp
// the input is a serialized identity proto message as defined in
// https://github.com/hyperledger/fabric-protos/blob/main/msp/identities.proto#L15
//
//	public bool validate_identity(
//	        const uint8_t *serializedIdentity,
//	        const uint32_t len);
type ValidateIdentityRequest struct {
	state              protoimpl.MessageState `protogen:"open.v1"`
	SerializedIdentity []byte                 `protobuf:"bytes,1,opt,name=serialized_identity,json=serializedIdentity,proto3" json:"serialized_identity,omitempty"`
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

func (x *ValidateIdentityRequest) Reset() {
	*x = ValidateIdentityRequest{}
	mi := &file_fpc_trusted_ledger_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ValidateIdentityRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ValidateIdentityRequest) ProtoMessage() {}

func (x *ValidateIdentityRequest) ProtoReflect() protoreflect.Message {
	mi := &file_fpc_trusted_ledger_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ValidateIdentityRequest.ProtoReflect.Descriptor instead.
func (*ValidateIdentityRequest) Descriptor() ([]byte, []int) {
	return file_fpc_trusted_ledger_proto_rawDescGZIP(), []int{4}
}

func (x *ValidateIdentityRequest) GetSerializedIdentity() []byte {
	if x != nil {
		return x.SerializedIdentity
	}
	return nil
}

type ValidateIdentityResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	IsValid       bool                   `protobuf:"varint,1,opt,name=is_valid,json=isValid,proto3" json:"is_valid,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ValidateIdentityResponse) Reset() {
	*x = ValidateIdentityResponse{}
	mi := &file_fpc_trusted_ledger_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ValidateIdentityResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ValidateIdentityResponse) ProtoMessage() {}

func (x *ValidateIdentityResponse) ProtoReflect() protoreflect.Message {
	mi := &file_fpc_trusted_ledger_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ValidateIdentityResponse.ProtoReflect.Descriptor instead.
func (*ValidateIdentityResponse) Descriptor() ([]byte, []int) {
	return file_fpc_trusted_ledger_proto_rawDescGZIP(), []int{5}
}

func (x *ValidateIdentityResponse) GetIsValid() bool {
	if x != nil {
		return x.IsValid
	}
	return false
}

// checks if a given enclave identifier can endorse transactions
// as defined in the chaincode definition; this checks that the given enclave
// has correct the MRENCLAVE and enclave is part of an organization that can
// satisfy the endorsing policy of a given chaincode.
//
//	public bool can_endorse(
//	        const char *chaincode_id,
//	        const char *enclave_id);
type CanEndorseRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// note: could be implied from session context but still explicit in case we want to expose to ERCC
	ChaincodeId   string `protobuf:"bytes,1,opt,name=chaincode_id,json=chaincodeId,proto3" json:"chaincode_id,omitempty"`
	EnclaveId     string `protobuf:"bytes,2,opt,name=enclave_id,json=enclaveId,proto3" json:"enclave_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CanEndorseRequest) Reset() {
	*x = CanEndorseRequest{}
	mi := &file_fpc_trusted_ledger_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CanEndorseRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CanEndorseRequest) ProtoMessage() {}

func (x *CanEndorseRequest) ProtoReflect() protoreflect.Message {
	mi := &file_fpc_trusted_ledger_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CanEndorseRequest.ProtoReflect.Descriptor instead.
func (*CanEndorseRequest) Descriptor() ([]byte, []int) {
	return file_fpc_trusted_ledger_proto_rawDescGZIP(), []int{6}
}

func (x *CanEndorseRequest) GetChaincodeId() string {
	if x != nil {
		return x.ChaincodeId
	}
	return ""
}

func (x *CanEndorseRequest) GetEnclaveId() string {
	if x != nil {
		return x.EnclaveId
	}
	return ""
}

type CanEndorseResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	IsValid       bool                   `protobuf:"varint,1,opt,name=is_valid,json=isValid,proto3" json:"is_valid,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CanEndorseResponse) Reset() {
	*x = CanEndorseResponse{}
	mi := &file_fpc_trusted_ledger_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CanEndorseResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CanEndorseResponse) ProtoMessage() {}

func (x *CanEndorseResponse) ProtoReflect() protoreflect.Message {
	mi := &file_fpc_trusted_ledger_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CanEndorseResponse.ProtoReflect.Descriptor instead.
func (*CanEndorseResponse) Descriptor() ([]byte, []int) {
	return file_fpc_trusted_ledger_proto_rawDescGZIP(), []int{7}
}

func (x *CanEndorseResponse) GetIsValid() bool {
	if x != nil {
		return x.IsValid
	}
	return false
}

// - wrapper type which is passed to `tl_session_request` and the handler registered with `tl_session_register`
type Request struct {
	state     protoimpl.MessageState `protogen:"open.v1"`
	TxContext []byte                 `protobuf:"bytes,1,opt,name=tx_context,json=txContext,proto3" json:"tx_context,omitempty"`
	// tx_context is used by TLCC to enforce consistency across separate requests of
	// a single chaincode transaction (including potential subtransactions) and is
	// an arbitrary identifier chosen by ECC_Enclave with following constraints:
	//   - for a given single (top-level) chaincode invocation, it must be the same for any tlcc requests
	//     triggered by it (whether directly the top-level or from sub-transactions invoked via cc2cc)
	//   - different (top-level) invocations (of same chaincode) must provide different identifiers
	//
	// Based on this tlcc can achieve view consistency by, e.g., serializing transactions and state
	// updates or keeping separate views, with each active transaction identifiers mapped to one of
	// these views.
	// Note: If TLCC manages snapshots by serializing, we might also have to add an additional
	// Request/Response type notify tlcc when an chaincode invocation has completed (otherwise
	// TLCC wouldn't know when it would be safe to start the state update
	//
	// An alternative approach could be to replace this field with some view identifier
	// in TLCCResponse, with ECC enforcing consistency (although in this case it could
	// only abort in case of inconsistency and there might be the issue that as parallelism
	// increases, no progress could ever be made ...
	// =>
	// TODO: Above has to be reconciled with the resolution of following issues/PRs
	//
	//	related to view consistency:
	//	- [#402](https://github.com/hyperledger/fabric-private-chaincode/issues/402)
	//	- [#435](https://github.com/hyperledger/fabric-private-chaincode/pull/435)
	//	- [#361](https://github.com/hyperledger/fabric-private-chaincode/issues/361)
	//
	// Types that are valid to be assigned to Request:
	//
	//	*Request_Metadata
	//	*Request_MultiMetadata
	//	*Request_ValidateIdentity
	//	*Request_CanEndorse
	Request       isRequest_Request `protobuf_oneof:"request"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Request) Reset() {
	*x = Request{}
	mi := &file_fpc_trusted_ledger_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Request) ProtoMessage() {}

func (x *Request) ProtoReflect() protoreflect.Message {
	mi := &file_fpc_trusted_ledger_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Request.ProtoReflect.Descriptor instead.
func (*Request) Descriptor() ([]byte, []int) {
	return file_fpc_trusted_ledger_proto_rawDescGZIP(), []int{8}
}

func (x *Request) GetTxContext() []byte {
	if x != nil {
		return x.TxContext
	}
	return nil
}

func (x *Request) GetRequest() isRequest_Request {
	if x != nil {
		return x.Request
	}
	return nil
}

func (x *Request) GetMetadata() *GetMetadataRequest {
	if x != nil {
		if x, ok := x.Request.(*Request_Metadata); ok {
			return x.Metadata
		}
	}
	return nil
}

func (x *Request) GetMultiMetadata() *GetMultiMetadataRequest {
	if x != nil {
		if x, ok := x.Request.(*Request_MultiMetadata); ok {
			return x.MultiMetadata
		}
	}
	return nil
}

func (x *Request) GetValidateIdentity() *ValidateIdentityRequest {
	if x != nil {
		if x, ok := x.Request.(*Request_ValidateIdentity); ok {
			return x.ValidateIdentity
		}
	}
	return nil
}

func (x *Request) GetCanEndorse() *CanEndorseRequest {
	if x != nil {
		if x, ok := x.Request.(*Request_CanEndorse); ok {
			return x.CanEndorse
		}
	}
	return nil
}

type isRequest_Request interface {
	isRequest_Request()
}

type Request_Metadata struct {
	Metadata *GetMetadataRequest `protobuf:"bytes,2,opt,name=metadata,proto3,oneof"`
}

type Request_MultiMetadata struct {
	MultiMetadata *GetMultiMetadataRequest `protobuf:"bytes,3,opt,name=multi_metadata,json=multiMetadata,proto3,oneof"`
}

type Request_ValidateIdentity struct {
	ValidateIdentity *ValidateIdentityRequest `protobuf:"bytes,4,opt,name=validate_identity,json=validateIdentity,proto3,oneof"`
}

type Request_CanEndorse struct {
	CanEndorse *CanEndorseRequest `protobuf:"bytes,5,opt,name=can_endorse,json=canEndorse,proto3,oneof"`
}

func (*Request_Metadata) isRequest_Request() {}

func (*Request_MultiMetadata) isRequest_Request() {}

func (*Request_ValidateIdentity) isRequest_Request() {}

func (*Request_CanEndorse) isRequest_Request() {}

type Response struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Types that are valid to be assigned to Response:
	//
	//	*Response_Metadata
	//	*Response_MultiMetadata
	//	*Response_ValidateIdentity
	//	*Response_CanEndorse
	Response      isResponse_Response `protobuf_oneof:"response"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Response) Reset() {
	*x = Response{}
	mi := &file_fpc_trusted_ledger_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Response) ProtoMessage() {}

func (x *Response) ProtoReflect() protoreflect.Message {
	mi := &file_fpc_trusted_ledger_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Response.ProtoReflect.Descriptor instead.
func (*Response) Descriptor() ([]byte, []int) {
	return file_fpc_trusted_ledger_proto_rawDescGZIP(), []int{9}
}

func (x *Response) GetResponse() isResponse_Response {
	if x != nil {
		return x.Response
	}
	return nil
}

func (x *Response) GetMetadata() *GetMetadataResponse {
	if x != nil {
		if x, ok := x.Response.(*Response_Metadata); ok {
			return x.Metadata
		}
	}
	return nil
}

func (x *Response) GetMultiMetadata() *GetMultiMetadataResponse {
	if x != nil {
		if x, ok := x.Response.(*Response_MultiMetadata); ok {
			return x.MultiMetadata
		}
	}
	return nil
}

func (x *Response) GetValidateIdentity() *ValidateIdentityResponse {
	if x != nil {
		if x, ok := x.Response.(*Response_ValidateIdentity); ok {
			return x.ValidateIdentity
		}
	}
	return nil
}

func (x *Response) GetCanEndorse() *CanEndorseResponse {
	if x != nil {
		if x, ok := x.Response.(*Response_CanEndorse); ok {
			return x.CanEndorse
		}
	}
	return nil
}

type isResponse_Response interface {
	isResponse_Response()
}

type Response_Metadata struct {
	Metadata *GetMetadataResponse `protobuf:"bytes,1,opt,name=metadata,proto3,oneof"`
}

type Response_MultiMetadata struct {
	MultiMetadata *GetMultiMetadataResponse `protobuf:"bytes,2,opt,name=multi_metadata,json=multiMetadata,proto3,oneof"`
}

type Response_ValidateIdentity struct {
	ValidateIdentity *ValidateIdentityResponse `protobuf:"bytes,3,opt,name=validate_identity,json=validateIdentity,proto3,oneof"`
}

type Response_CanEndorse struct {
	CanEndorse *CanEndorseResponse `protobuf:"bytes,4,opt,name=can_endorse,json=canEndorse,proto3,oneof"`
}

func (*Response_Metadata) isResponse_Response() {}

func (*Response_MultiMetadata) isResponse_Response() {}

func (*Response_ValidateIdentity) isResponse_Response() {}

func (*Response_CanEndorse) isResponse_Response() {}

var File_fpc_trusted_ledger_proto protoreflect.FileDescriptor

const file_fpc_trusted_ledger_proto_rawDesc = "" +
	"\n" +
	"\x18fpc/trusted_ledger.proto\x12\x0etrusted_ledger\"D\n" +
	"\x12GetMetadataRequest\x12\x1c\n" +
	"\tnamespace\x18\x01 \x01(\tR\tnamespace\x12\x10\n" +
	"\x03key\x18\x02 \x01(\tR\x03key\")\n" +
	"\x13GetMetadataResponse\x12\x12\n" +
	"\x04hash\x18\x01 \x01(\fR\x04hash\"T\n" +
	"\x17GetMultiMetadataRequest\x12\x1c\n" +
	"\tnamespace\x18\x01 \x01(\tR\tnamespace\x12\x1b\n" +
	"\tcompo_key\x18\x02 \x01(\tR\bcompoKey\".\n" +
	"\x18GetMultiMetadataResponse\x12\x12\n" +
	"\x04hash\x18\x01 \x01(\fR\x04hash\"J\n" +
	"\x17ValidateIdentityRequest\x12/\n" +
	"\x13serialized_identity\x18\x01 \x01(\fR\x12serializedIdentity\"5\n" +
	"\x18ValidateIdentityResponse\x12\x19\n" +
	"\bis_valid\x18\x01 \x01(\bR\aisValid\"U\n" +
	"\x11CanEndorseRequest\x12!\n" +
	"\fchaincode_id\x18\x01 \x01(\tR\vchaincodeId\x12\x1d\n" +
	"\n" +
	"enclave_id\x18\x02 \x01(\tR\tenclaveId\"/\n" +
	"\x12CanEndorseResponse\x12\x19\n" +
	"\bis_valid\x18\x01 \x01(\bR\aisValid\"\xe5\x02\n" +
	"\aRequest\x12\x1d\n" +
	"\n" +
	"tx_context\x18\x01 \x01(\fR\ttxContext\x12@\n" +
	"\bmetadata\x18\x02 \x01(\v2\".trusted_ledger.GetMetadataRequestH\x00R\bmetadata\x12P\n" +
	"\x0emulti_metadata\x18\x03 \x01(\v2'.trusted_ledger.GetMultiMetadataRequestH\x00R\rmultiMetadata\x12V\n" +
	"\x11validate_identity\x18\x04 \x01(\v2'.trusted_ledger.ValidateIdentityRequestH\x00R\x10validateIdentity\x12D\n" +
	"\vcan_endorse\x18\x05 \x01(\v2!.trusted_ledger.CanEndorseRequestH\x00R\n" +
	"canEndorseB\t\n" +
	"\arequest\"\xcc\x02\n" +
	"\bResponse\x12A\n" +
	"\bmetadata\x18\x01 \x01(\v2#.trusted_ledger.GetMetadataResponseH\x00R\bmetadata\x12Q\n" +
	"\x0emulti_metadata\x18\x02 \x01(\v2(.trusted_ledger.GetMultiMetadataResponseH\x00R\rmultiMetadata\x12W\n" +
	"\x11validate_identity\x18\x03 \x01(\v2(.trusted_ledger.ValidateIdentityResponseH\x00R\x10validateIdentity\x12E\n" +
	"\vcan_endorse\x18\x04 \x01(\v2\".trusted_ledger.CanEndorseResponseH\x00R\n" +
	"canEndorseB\n" +
	"\n" +
	"\bresponseBAZ?github.com/hyperledger/fabric-private-chaincode/internal/protosb\x06proto3"

var (
	file_fpc_trusted_ledger_proto_rawDescOnce sync.Once
	file_fpc_trusted_ledger_proto_rawDescData []byte
)

func file_fpc_trusted_ledger_proto_rawDescGZIP() []byte {
	file_fpc_trusted_ledger_proto_rawDescOnce.Do(func() {
		file_fpc_trusted_ledger_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_fpc_trusted_ledger_proto_rawDesc), len(file_fpc_trusted_ledger_proto_rawDesc)))
	})
	return file_fpc_trusted_ledger_proto_rawDescData
}

var file_fpc_trusted_ledger_proto_msgTypes = make([]protoimpl.MessageInfo, 10)
var file_fpc_trusted_ledger_proto_goTypes = []any{
	(*GetMetadataRequest)(nil),       // 0: trusted_ledger.GetMetadataRequest
	(*GetMetadataResponse)(nil),      // 1: trusted_ledger.GetMetadataResponse
	(*GetMultiMetadataRequest)(nil),  // 2: trusted_ledger.GetMultiMetadataRequest
	(*GetMultiMetadataResponse)(nil), // 3: trusted_ledger.GetMultiMetadataResponse
	(*ValidateIdentityRequest)(nil),  // 4: trusted_ledger.ValidateIdentityRequest
	(*ValidateIdentityResponse)(nil), // 5: trusted_ledger.ValidateIdentityResponse
	(*CanEndorseRequest)(nil),        // 6: trusted_ledger.CanEndorseRequest
	(*CanEndorseResponse)(nil),       // 7: trusted_ledger.CanEndorseResponse
	(*Request)(nil),                  // 8: trusted_ledger.Request
	(*Response)(nil),                 // 9: trusted_ledger.Response
}
var file_fpc_trusted_ledger_proto_depIdxs = []int32{
	0, // 0: trusted_ledger.Request.metadata:type_name -> trusted_ledger.GetMetadataRequest
	2, // 1: trusted_ledger.Request.multi_metadata:type_name -> trusted_ledger.GetMultiMetadataRequest
	4, // 2: trusted_ledger.Request.validate_identity:type_name -> trusted_ledger.ValidateIdentityRequest
	6, // 3: trusted_ledger.Request.can_endorse:type_name -> trusted_ledger.CanEndorseRequest
	1, // 4: trusted_ledger.Response.metadata:type_name -> trusted_ledger.GetMetadataResponse
	3, // 5: trusted_ledger.Response.multi_metadata:type_name -> trusted_ledger.GetMultiMetadataResponse
	5, // 6: trusted_ledger.Response.validate_identity:type_name -> trusted_ledger.ValidateIdentityResponse
	7, // 7: trusted_ledger.Response.can_endorse:type_name -> trusted_ledger.CanEndorseResponse
	8, // [8:8] is the sub-list for method output_type
	8, // [8:8] is the sub-list for method input_type
	8, // [8:8] is the sub-list for extension type_name
	8, // [8:8] is the sub-list for extension extendee
	0, // [0:8] is the sub-list for field type_name
}

func init() { file_fpc_trusted_ledger_proto_init() }
func file_fpc_trusted_ledger_proto_init() {
	if File_fpc_trusted_ledger_proto != nil {
		return
	}
	file_fpc_trusted_ledger_proto_msgTypes[8].OneofWrappers = []any{
		(*Request_Metadata)(nil),
		(*Request_MultiMetadata)(nil),
		(*Request_ValidateIdentity)(nil),
		(*Request_CanEndorse)(nil),
	}
	file_fpc_trusted_ledger_proto_msgTypes[9].OneofWrappers = []any{
		(*Response_Metadata)(nil),
		(*Response_MultiMetadata)(nil),
		(*Response_ValidateIdentity)(nil),
		(*Response_CanEndorse)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_fpc_trusted_ledger_proto_rawDesc), len(file_fpc_trusted_ledger_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   10,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_fpc_trusted_ledger_proto_goTypes,
		DependencyIndexes: file_fpc_trusted_ledger_proto_depIdxs,
		MessageInfos:      file_fpc_trusted_ledger_proto_msgTypes,
	}.Build()
	File_fpc_trusted_ledger_proto = out.File
	file_fpc_trusted_ledger_proto_goTypes = nil
	file_fpc_trusted_ledger_proto_depIdxs = nil
}
